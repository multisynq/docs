{
	"id": 0,
	"name": "@multisynq/client",
	"variant": "project",
	"kind": 1,
	"flags": {},
	"children": [
		{
			"id": 354,
			"name": "Session",
			"variant": "declaration",
			"kind": 4,
			"flags": {},
			"children": [
				{
					"id": 355,
					"name": "join",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "multisynq-client/client/types.d.ts",
							"line": 976,
							"character": 17,
							"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L976"
						}
					],
					"signatures": [
						{
							"id": 356,
							"name": "join",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "multisynq-client/client/types.d.ts",
									"line": 976,
									"character": 17,
									"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L976"
								}
							],
							"typeParameter": [
								{
									"id": 357,
									"name": "M",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 118,
										"name": "Model",
										"package": "@multisynq/client",
										"qualifiedName": "\"@multisynq/client\".Model"
									}
								},
								{
									"id": 358,
									"name": "V",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 232,
										"name": "View",
										"package": "@multisynq/client",
										"qualifiedName": "\"@multisynq/client\".View"
									}
								},
								{
									"id": 359,
									"name": "T",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 360,
									"name": "parameters",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 330,
										"typeArguments": [
											{
												"type": "reference",
												"target": 357,
												"name": "M",
												"package": "@multisynq/client",
												"refersToTypeParameter": true
											},
											{
												"type": "reference",
												"target": 358,
												"name": "V",
												"package": "@multisynq/client",
												"refersToTypeParameter": true
											},
											{
												"type": "reference",
												"target": 359,
												"name": "T",
												"package": "@multisynq/client",
												"refersToTypeParameter": true
											}
										],
										"name": "MultisynqSessionParameters",
										"package": "@multisynq/client",
										"qualifiedName": "\"@multisynq/client\".MultisynqSessionParameters"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "docs/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 288,
										"typeArguments": [
											{
												"type": "reference",
												"target": 358,
												"name": "V",
												"package": "@multisynq/client",
												"refersToTypeParameter": true
											}
										],
										"name": "MultisynqSession",
										"package": "@multisynq/client",
										"qualifiedName": "\"@multisynq/client\".MultisynqSession"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"children": [
						355
					]
				}
			],
			"sources": [
				{
					"fileName": "multisynq-client/client/types.d.ts",
					"line": 975,
					"character": 21,
					"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L975"
				}
			]
		},
		{
			"id": 118,
			"name": "Model",
			"variant": "declaration",
			"kind": 128,
			"flags": {
				"isPublic": true
			},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Models are synchronized objects in Multisynq.\n\nThey are automatically kept in sync for each user in the same [session]"
					},
					{
						"kind": "inline-tag",
						"tag": "@link",
						"text": "Session.join",
						"target": 355,
						"tsLinkText": ""
					},
					{
						"kind": "text",
						"text": ".\nModels receive input by [subscribing]"
					},
					{
						"kind": "inline-tag",
						"tag": "@link",
						"text": "Model#subscribe",
						"target": 155,
						"tsLinkText": ""
					},
					{
						"kind": "text",
						"text": " to events published in a "
					},
					{
						"kind": "inline-tag",
						"tag": "@link",
						"text": "View",
						"target": 232,
						"tsLinkText": ""
					},
					{
						"kind": "text",
						"text": ".\nTheir output is handled by views subscribing to events [published]"
					},
					{
						"kind": "inline-tag",
						"tag": "@link",
						"text": "Model#publish",
						"target": 149,
						"tsLinkText": ""
					},
					{
						"kind": "text",
						"text": " by a model.\nModels advance time by sending messages into their [future]"
					},
					{
						"kind": "inline-tag",
						"tag": "@link",
						"text": "Model#future",
						"target": 171,
						"tsLinkText": ""
					},
					{
						"kind": "text",
						"text": ".\n\n## Instance Creation and Initialization\n\n### Do __NOT__ create a "
					},
					{
						"kind": "inline-tag",
						"tag": "@link",
						"text": "Model",
						"target": 118,
						"tsLinkText": ""
					},
					{
						"kind": "text",
						"text": " instance using "
					},
					{
						"kind": "code",
						"text": "`new`"
					},
					{
						"kind": "text",
						"text": " and<br>do __NOT__ override the "
					},
					{
						"kind": "code",
						"text": "`constructor`"
					},
					{
						"kind": "text",
						"text": "!\n\nTo __create__ a new instance, use [create()]"
					},
					{
						"kind": "inline-tag",
						"tag": "@link",
						"text": "Model.create",
						"target": 120,
						"tsLinkText": ""
					},
					{
						"kind": "text",
						"text": ", for example:\n"
					},
					{
						"kind": "code",
						"text": "```\nthis.foo = FooModel.create({answer: 123});\n```"
					},
					{
						"kind": "text",
						"text": "\nTo __initialize__ an instance, override [init()]"
					},
					{
						"kind": "inline-tag",
						"tag": "@link",
						"text": "Model#init",
						"target": 143,
						"tsLinkText": ""
					},
					{
						"kind": "text",
						"text": ", for example:\n"
					},
					{
						"kind": "code",
						"text": "```\nclass FooModel extends Multisynq.Model {\n    init(options={}) {\n        this.answer = options.answer || 42;\n    }\n}\n```"
					},
					{
						"kind": "text",
						"text": "\nThe **reason** for this is that Models are only initialized by calling "
					},
					{
						"kind": "code",
						"text": "`init()`"
					},
					{
						"kind": "text",
						"text": "\nthe first time the object comes into existence in the session.\nAfter that, when joining a session, the models are deserialized from the snapshot, which\nrestores all properties automatically without calling "
					},
					{
						"kind": "code",
						"text": "`init()`"
					},
					{
						"kind": "text",
						"text": ". A constructor would\nbe called all the time, not just when starting a session."
					}
				],
				"blockTags": [
					{
						"tag": "@hideconstructor",
						"content": []
					}
				]
			},
			"children": [
				{
					"id": 140,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 141,
							"name": "new Model",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 118,
								"name": "Model",
								"package": "@multisynq/client",
								"qualifiedName": "\"@multisynq/client\".Model"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 80,
								"name": "PubSubParticipant.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 79,
						"name": "PubSubParticipant.constructor"
					}
				},
				{
					"id": 142,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "multisynq-client/client/types.d.ts",
							"line": 91,
							"character": 8,
							"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L91"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 212,
					"name": "sessionId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "*Identifies the shared session of all users**\n\n(as opposed to the [viewId]"
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "View#viewId",
								"target": 267,
								"tsLinkText": ""
							},
							{
								"kind": "text",
								"text": " which identifies the non-shared views of each user).\n\nThe session id is used as \"global\" scope for events like ["
							},
							{
								"kind": "code",
								"text": "`\"view-join\"`"
							},
							{
								"kind": "text",
								"text": "]"
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "event:view-join",
								"target": {
									"sourceFileName": "docs/node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "event"
								},
								"tsLinkText": ":view-join"
							},
							{
								"kind": "text",
								"text": ".\n\nSee "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "Session.join",
								"target": 355,
								"tsLinkText": ""
							},
							{
								"kind": "text",
								"text": " for how the session id is generated.\n\nIf your app has several sessions at the same time, each session id will be different.\n\nExample\n"
							},
							{
								"kind": "code",
								"text": "```\nthis.subscribe(this.sessionId, \"view-join\", this.addUser);\n```"
							}
						]
					},
					"sources": [
						{
							"fileName": "multisynq-client/client/types.d.ts",
							"line": 603,
							"character": 8,
							"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L603"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 213,
					"name": "viewCount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "*The number of users currently in this session.**\n\nAll users in a session share the same Model (meaning all model objects) but each user has a different View\n(meaning all the non-model state). This is the number of views currently sharing this model.\nIt increases by 1 for every ["
							},
							{
								"kind": "code",
								"text": "`\"view-join\"`"
							},
							{
								"kind": "text",
								"text": "]"
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "event:view-join",
								"target": {
									"sourceFileName": "docs/node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "event"
								},
								"tsLinkText": ":view-join"
							},
							{
								"kind": "text",
								"text": "\nand decreases by 1 for every ["
							},
							{
								"kind": "code",
								"text": "`\"view-exit\"`"
							},
							{
								"kind": "text",
								"text": "]"
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "event:view-exit",
								"target": {
									"sourceFileName": "docs/node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "event"
								},
								"tsLinkText": ":view-exit"
							},
							{
								"kind": "text",
								"text": " event.\n\nExample\n"
							},
							{
								"kind": "code",
								"text": "```\nthis.subscribe(this.sessionId, \"view-join\", this.showUsers);\nthis.subscribe(this.sessionId, \"view-exit\", this.showUsers);\nshowUsers() { this.publish(this.sessionId, \"view-count\", this.viewCount); }\n```"
							}
						]
					},
					"sources": [
						{
							"fileName": "multisynq-client/client/types.d.ts",
							"line": 618,
							"character": 8,
							"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L618"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 139,
					"name": "Multisynq",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isStatic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "make module exports accessible via any subclass"
							}
						]
					},
					"sources": [
						{
							"fileName": "multisynq-client/client/types.d.ts",
							"line": 621,
							"character": 15,
							"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L621"
						}
					],
					"type": {
						"type": "reference",
						"target": 462,
						"name": "Multisynq",
						"package": "@multisynq/client",
						"qualifiedName": "\"@multisynq/client\".Multisynq"
					}
				},
				{
					"id": 169,
					"name": "activeSubscription",
					"variant": "declaration",
					"kind": 262144,
					"flags": {},
					"sources": [
						{
							"fileName": "multisynq-client/client/types.d.ts",
							"line": 405,
							"character": 12,
							"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L405"
						}
					],
					"getSignature": {
						"id": 170,
						"name": "activeSubscription",
						"variant": "signature",
						"kind": 524288,
						"flags": {
							"isPublic": true
						},
						"comment": {
							"summary": [
								{
									"kind": "text",
									"text": "Scope, event, and source of the currently executing subscription handler.\n\nThe "
								},
								{
									"kind": "code",
									"text": "`source' is either `"
								},
								{
									"kind": "text",
									"text": "\"model\""
								},
								{
									"kind": "code",
									"text": "` or `"
								},
								{
									"kind": "text",
									"text": "\"view\""
								},
								{
									"kind": "code",
									"text": "`.\n\n```\n// this.subscribe(\"*\", \"*\", this.logEvents)\nlogEvents(data: any) {\n    const {scope, event, source} = this.activeSubscription!;\n    console.log(`"
								},
								{
									"kind": "text",
									"text": "${this.now()} Event in model from ${source} ${scope}:${event} with"
								},
								{
									"kind": "code",
									"text": "`, data);\n}\n```\n@returns {Object} `"
								},
								{
									"kind": "text",
									"text": "{scope, event, source}"
								},
								{
									"kind": "code",
									"text": "` or `"
								},
								{
									"kind": "text",
									"text": "undefined` if not in a subscription handler."
								}
							],
							"blockTags": [
								{
									"tag": "@since",
									"content": [
										{
											"kind": "text",
											"text": "2.0"
										}
									]
								}
							]
						},
						"sources": [
							{
								"fileName": "multisynq-client/client/types.d.ts",
								"line": 405,
								"character": 12,
								"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L405"
							}
						],
						"type": {
							"type": "reference",
							"target": 113,
							"name": "EventType",
							"package": "@multisynq/client",
							"qualifiedName": "\"@multisynq/client\".EventType"
						}
					}
				},
				{
					"id": 185,
					"name": "beWellKnownAs",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "multisynq-client/client/types.d.ts",
							"line": 509,
							"character": 8,
							"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L509"
						}
					],
					"signatures": [
						{
							"id": 186,
							"name": "beWellKnownAs",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Make this model globally accessible under the given name. It can be retrieved from any other model in the same session\nusing [wellKnownModel()]"
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Model#wellKnownModel",
										"target": 188,
										"tsLinkText": ""
									},
									{
										"kind": "text",
										"text": ".\n\nHint: Another way to make a model well-known is to pass a name as second argument to [Model.create()]"
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Model#create"
									},
									{
										"kind": "text",
										"text": ".\n\nExample:\n"
									},
									{
										"kind": "code",
										"text": "```\n class FooManager extends Multisynq.Model {\n     init() {\n         this.beWellKnownAs(\"UberFoo\");\n     }\n }\n class Underlings extends Multisynq.Model {\n     reportToManager(something) {\n         this.wellKnownModel(\"UberFoo\").report(something);\n     }\n }\n```"
									}
								]
							},
							"sources": [
								{
									"fileName": "multisynq-client/client/types.d.ts",
									"line": 509,
									"character": 8,
									"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L509"
								}
							],
							"parameters": [
								{
									"id": 187,
									"name": "name",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 177,
					"name": "cancelFuture",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "multisynq-client/client/types.d.ts",
							"line": 468,
							"character": 8,
							"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L468"
						}
					],
					"signatures": [
						{
							"id": 178,
							"name": "cancelFuture",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isPublic": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "**Cancel a previously scheduled future message**\n\nThis unschedules the invocation of a message that was scheduled with [future]"
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Model#future",
										"target": 171,
										"tsLinkText": ""
									},
									{
										"kind": "text",
										"text": ".\nIt is okay to call this method even if the message was already executed or if it was never scheduled.\n\n**Note:** as with [future]"
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Model#future",
										"target": 171,
										"tsLinkText": ""
									},
									{
										"kind": "text",
										"text": ", the recommended form is to pass the method itself,\nbut you can also pass the name of the method as a string."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nthis.future(3000).say(\"hello\", \"world\");\n...\nthis.cancelFuture(this.say);\n```"
											}
										]
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "true if the message was found and canceled, false otherwise"
											}
										]
									},
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "1.1.0-16"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "multisynq-client/client/types.d.ts",
									"line": 468,
									"character": 8,
									"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L468"
								}
							],
							"typeParameter": [
								{
									"id": 179,
									"name": "T",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								}
							],
							"parameters": [
								{
									"id": 180,
									"name": "method",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "the method (must be a method of "
											},
											{
												"kind": "code",
												"text": "`this`"
											},
											{
												"kind": "text",
												"text": ")"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 107,
										"typeArguments": [
											{
												"type": "reference",
												"target": 179,
												"name": "T",
												"package": "@multisynq/client",
												"refersToTypeParameter": true
											}
										],
										"name": "FutureHandler",
										"package": "@multisynq/client",
										"qualifiedName": "\"@multisynq/client\".FutureHandler"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 199,
					"name": "createQFunc",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "multisynq-client/client/types.d.ts",
							"line": 584,
							"character": 8,
							"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L584"
						},
						{
							"fileName": "multisynq-client/client/types.d.ts",
							"line": 585,
							"character": 8,
							"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L585"
						}
					],
					"signatures": [
						{
							"id": 200,
							"name": "createQFunc",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isPublic": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "**Create a serializable function that can be stored in the model.**\n\nPlain functions can not be serialized because they may contain closures that can\nnot be introspected by the snapshot mechanism. This method creates a serializable\n\"QFunc\" from a regular function. It can be stored in the model and called like\nthe original function.\n\nThe function can only access global references (like classes), *all local\nreferences must be passed in the "
									},
									{
										"kind": "code",
										"text": "`env`"
									},
									{
										"kind": "text",
										"text": " object*. They are captured\nas constants at the time the QFunc is created. Since they are constants,\nre-assignments will throw an error.\n\nIn a fat-arrow function, "
									},
									{
										"kind": "code",
										"text": "`this`"
									},
									{
										"kind": "text",
										"text": " is bound to the model that called "
									},
									{
										"kind": "code",
										"text": "`createQFunc`"
									},
									{
										"kind": "text",
										"text": ",\neven in a different lexical scope. It is okay to call a model's "
									},
									{
										"kind": "code",
										"text": "`createQFunc`"
									},
									{
										"kind": "text",
										"text": " from\nanywhere, e.g. from a view. QFuncs can be passed from view to model as arguments\nin "
									},
									{
										"kind": "code",
										"text": "`publish()`"
									},
									{
										"kind": "text",
										"text": " (provided their environment is serializable).\n\n**Warning:** Minification can change the names of local variables and functions,\nbut the env will still use the unminified names. You need to disable\nminification for source code that creates QFuncs with env. Alternatively, you can\npass the function's source code as a string, which will not be minified.\n\nBehind the scenes, the function is stored as a string and compiled when needed.\nThe env needs to be constant because the serializer would not able to capture\nthe values if they were allowed to change."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst template = { greeting: \"Hi there,\" };\nthis.greet = this.createQFunc({template}, (name) => console.log(template.greeting, name));\nthis.greet(this, \"friend\"); // logs \"Hi there, friend\"\ntemplate.greeting = \"Bye now,\";\nthis.greet(this, \"friend\"); // logs \"Bye now, friend\"\n```"
											}
										]
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "a serializable function bound to the given environment"
											}
										]
									},
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "2.0"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "multisynq-client/client/types.d.ts",
									"line": 584,
									"character": 8,
									"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L584"
								}
							],
							"typeParameter": [
								{
									"id": 201,
									"name": "T",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "docs/node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Function"
										},
										"name": "Function",
										"package": "typescript"
									}
								}
							],
							"parameters": [
								{
									"id": 202,
									"name": "env",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "an object with references used by the function"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 112,
										"name": "QFuncEnv",
										"package": "@multisynq/client",
										"qualifiedName": "\"@multisynq/client\".QFuncEnv"
									}
								},
								{
									"id": 203,
									"name": "func",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "the function to be wrapped, or a string with the function's source code"
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"target": 201,
												"name": "T",
												"package": "@multisynq/client",
												"refersToTypeParameter": true
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 201,
								"name": "T",
								"package": "@multisynq/client",
								"refersToTypeParameter": true
							}
						},
						{
							"id": 204,
							"name": "createQFunc",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "multisynq-client/client/types.d.ts",
									"line": 585,
									"character": 8,
									"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L585"
								}
							],
							"typeParameter": [
								{
									"id": 205,
									"name": "T",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "docs/node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Function"
										},
										"name": "Function",
										"package": "typescript"
									}
								}
							],
							"parameters": [
								{
									"id": 206,
									"name": "func",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"target": 205,
												"name": "T",
												"package": "@multisynq/client",
												"refersToTypeParameter": true
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 205,
								"name": "T",
								"package": "@multisynq/client",
								"refersToTypeParameter": true
							}
						}
					]
				},
				{
					"id": 147,
					"name": "destroy",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "multisynq-client/client/types.d.ts",
							"line": 271,
							"character": 8,
							"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L271"
						}
					],
					"signatures": [
						{
							"id": 148,
							"name": "destroy",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isPublic": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Unsubscribes all [subscriptions]"
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Model#subscribe",
										"target": 155,
										"tsLinkText": ""
									},
									{
										"kind": "text",
										"text": " this model has,\nunschedules all [future]"
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Model#future",
										"target": 171,
										"tsLinkText": ""
									},
									{
										"kind": "text",
										"text": " messages,\nand removes it from future snapshots.\n\nExample:\n"
									},
									{
										"kind": "code",
										"text": "```\nremoveChild(child) {\n   const index = this.children.indexOf(child);\n   this.children.splice(index, 1);\n   child.destroy();\n}\n```"
									}
								]
							},
							"sources": [
								{
									"fileName": "multisynq-client/client/types.d.ts",
									"line": 271,
									"character": 8,
									"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L271"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 171,
					"name": "future",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "multisynq-client/client/types.d.ts",
							"line": 448,
							"character": 8,
							"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L448"
						}
					],
					"signatures": [
						{
							"id": 172,
							"name": "future",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isPublic": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "**Schedule a message for future execution**\n\nUse a future message to automatically advance time in a model,\nfor example for animations.\nThe execution will be scheduled "
									},
									{
										"kind": "code",
										"text": "`tOffset`"
									},
									{
										"kind": "text",
										"text": " milliseconds into the future.\nIt will run at precisely "
									},
									{
										"kind": "code",
										"text": "`this.now() + tOffset`"
									},
									{
										"kind": "text",
										"text": ".\n\nUse the form "
									},
									{
										"kind": "code",
										"text": "`this.future(100).methodName(args)`"
									},
									{
										"kind": "text",
										"text": " to schedule the execution\nof "
									},
									{
										"kind": "code",
										"text": "`this.methodName(args)`"
									},
									{
										"kind": "text",
										"text": " at time "
									},
									{
										"kind": "code",
										"text": "`this.now() + tOffset`"
									},
									{
										"kind": "text",
										"text": ".\n\n**Hint**: This would be an unusual use of "
									},
									{
										"kind": "code",
										"text": "`future()`"
									},
									{
										"kind": "text",
										"text": ", but the "
									},
									{
										"kind": "code",
										"text": "`tOffset`"
									},
									{
										"kind": "text",
										"text": " given may be "
									},
									{
										"kind": "code",
										"text": "`0`"
									},
									{
										"kind": "text",
										"text": ",\nin which case the execution will happen asynchronously before advancing time.\nThis is the only way for asynchronous execution in the model since you must not\nuse Promises or async functions in model code (because a snapshot may happen at any time\nand it would not capture those executions).\n\n**Note:** the recommended form given above is equivalent to "
									},
									{
										"kind": "code",
										"text": "`this.future(100, \"methodName\", arg1, arg2)`"
									},
									{
										"kind": "text",
										"text": "\nbut makes it more clear that \"methodName\" is not just a string but the name of a method of this object.\nAlso, this will survive minification.\nTechnically, it answers a [Proxy]"
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Proxy",
										"target": "https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Proxy"
									},
									{
										"kind": "text",
										"text": "\nthat captures the name and arguments of "
									},
									{
										"kind": "code",
										"text": "`.methodName(args)`"
									},
									{
										"kind": "text",
										"text": " for later execution.\n\nSee this [tutorial]"
									},
									{
										"kind": "inline-tag",
										"tag": "@tutorial",
										"text": "1_1_hello_world"
									},
									{
										"kind": "text",
										"text": " for a complete example.\n\nExample: single invocation with two arguments\n"
									},
									{
										"kind": "code",
										"text": "```\nthis.future(3000).say(\"hello\", \"world\");\n```"
									},
									{
										"kind": "text",
										"text": "\nExample: repeated invocation with no arguments\n"
									},
									{
										"kind": "code",
										"text": "```\ntick() {\n    this.n++;\n    this.publish(this.id, \"count\", {time: this.now(), count: this.n)});\n    this.future(100).tick();\n}\n```"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": []
									}
								]
							},
							"sources": [
								{
									"fileName": "multisynq-client/client/types.d.ts",
									"line": 448,
									"character": 8,
									"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L448"
								}
							],
							"typeParameter": [
								{
									"id": 173,
									"name": "T",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								}
							],
							"parameters": [
								{
									"id": 174,
									"name": "tOffset",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "time offset in milliseconds, must be >= 0"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 175,
									"name": "method",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 107,
										"typeArguments": [
											{
												"type": "reference",
												"target": 173,
												"name": "T",
												"package": "@multisynq/client",
												"refersToTypeParameter": true
											}
										],
										"name": "FutureHandler",
										"package": "@multisynq/client",
										"qualifiedName": "\"@multisynq/client\".FutureHandler"
									}
								},
								{
									"id": 176,
									"name": "args",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isRest": true
									},
									"type": {
										"type": "reference",
										"target": 173,
										"name": "T",
										"package": "@multisynq/client",
										"refersToTypeParameter": true
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "this"
							}
						}
					]
				},
				{
					"id": 192,
					"name": "getModel",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "multisynq-client/client/types.d.ts",
							"line": 531,
							"character": 8,
							"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L531"
						}
					],
					"signatures": [
						{
							"id": 193,
							"name": "getModel",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Look up a model in the current session given its "
									},
									{
										"kind": "code",
										"text": "`id`"
									},
									{
										"kind": "text",
										"text": ".\n\nExample:\n"
									},
									{
										"kind": "code",
										"text": "```\nconst otherModel = this.getModel(otherId);\n```"
									}
								]
							},
							"sources": [
								{
									"fileName": "multisynq-client/client/types.d.ts",
									"line": 531,
									"character": 8,
									"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L531"
								}
							],
							"typeParameter": [
								{
									"id": 194,
									"name": "M",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 118,
										"name": "Model",
										"package": "@multisynq/client",
										"qualifiedName": "\"@multisynq/client\".Model"
									}
								}
							],
							"parameters": [
								{
									"id": 195,
									"name": "id",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 194,
								"name": "M",
								"package": "@multisynq/client",
								"refersToTypeParameter": true
							}
						}
					]
				},
				{
					"id": 143,
					"name": "init",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "multisynq-client/client/types.d.ts",
							"line": 254,
							"character": 8,
							"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L254"
						}
					],
					"signatures": [
						{
							"id": 144,
							"name": "init",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This is called by [create()]"
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Model.create",
										"target": 120,
										"tsLinkText": ""
									},
									{
										"kind": "text",
										"text": " to initialize a model instance.\n\nIn your Model subclass this is the place to [subscribe]"
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Model#subscribe",
										"target": 155,
										"tsLinkText": ""
									},
									{
										"kind": "text",
										"text": " to events,\nor start a [future]"
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Model#future",
										"target": 171,
										"tsLinkText": ""
									},
									{
										"kind": "text",
										"text": " message chain.\n\n**Note:** When your model instance is no longer needed, you must [destroy]"
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Model#destroy",
										"target": 147,
										"tsLinkText": ""
									},
									{
										"kind": "text",
										"text": " it."
									}
								]
							},
							"sources": [
								{
									"fileName": "multisynq-client/client/types.d.ts",
									"line": 254,
									"character": 8,
									"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L254"
								}
							],
							"parameters": [
								{
									"id": 145,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 146,
									"name": "persistentData",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 196,
					"name": "modelOnly",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "multisynq-client/client/types.d.ts",
							"line": 542,
							"character": 8,
							"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L542"
						}
					],
					"signatures": [
						{
							"id": 197,
							"name": "modelOnly",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This methods checks if it is being called from a model, and throws an Error otherwise.\n\nUse this to protect some model code against accidentally being called from a view.\n\nExample:\n"
									},
									{
										"kind": "code",
										"text": "```\nget foo() { return this._foo; }\nset foo(value) { this.modelOnly(); this._foo = value; }\n```"
									}
								]
							},
							"sources": [
								{
									"fileName": "multisynq-client/client/types.d.ts",
									"line": 542,
									"character": 8,
									"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L542"
								}
							],
							"parameters": [
								{
									"id": 198,
									"name": "errorMessage",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 183,
					"name": "now",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "multisynq-client/client/types.d.ts",
							"line": 489,
							"character": 8,
							"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L489"
						}
					],
					"signatures": [
						{
							"id": 184,
							"name": "now",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "*The model's current time**\n\nEvery [event handler]"
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Model#subscribe",
										"target": 155,
										"tsLinkText": ""
									},
									{
										"kind": "text",
										"text": " and [future message]"
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Model#future",
										"target": 171,
										"tsLinkText": ""
									},
									{
										"kind": "text",
										"text": " is run at a precisely defined moment\nin virtual model time, and time stands still while this execution is happening. That means if you were to access this.now()\nin a loop, it would never answer a different value.\n\nThe unit of now is milliseconds (1/1000 second) but the value can be fractional, it is a floating-point value."
									}
								]
							},
							"sources": [
								{
									"fileName": "multisynq-client/client/types.d.ts",
									"line": 489,
									"character": 8,
									"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L489"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					]
				},
				{
					"id": 207,
					"name": "persistSession",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "multisynq-client/client/types.d.ts",
							"line": 587,
							"character": 8,
							"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L587"
						}
					],
					"signatures": [
						{
							"id": 208,
							"name": "persistSession",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "multisynq-client/client/types.d.ts",
									"line": 587,
									"character": 8,
									"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L587"
								}
							],
							"parameters": [
								{
									"id": 209,
									"name": "func",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 210,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "multisynq-client/client/types.d.ts",
													"line": 587,
													"character": 29,
													"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L587"
												}
											],
											"signatures": [
												{
													"id": 211,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"sources": [
														{
															"fileName": "multisynq-client/client/types.d.ts",
															"line": 587,
															"character": 29,
															"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L587"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 149,
					"name": "publish",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "multisynq-client/client/types.d.ts",
							"line": 306,
							"character": 8,
							"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L306"
						}
					],
					"signatures": [
						{
							"id": 150,
							"name": "publish",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isPublic": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "**Publish an event to a scope.**\n\nEvents are the main form of communication between models and views in Multisynq.\nBoth models and views can publish events, and subscribe to each other's events.\nModel-to-model and view-to-view subscriptions are possible, too.\n\nSee [Model.subscribe]"
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Model#subscribe",
										"target": 155,
										"tsLinkText": ""
									},
									{
										"kind": "text",
										"text": "() for a discussion of **scopes** and **event names**.\nRefer to [View.subscribe]"
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "View#subscribe",
										"target": 245,
										"tsLinkText": ""
									},
									{
										"kind": "text",
										"text": "() for invoking event handlers *asynchronously* or *immediately*.\n\nOptionally, you can pass some **data** along with the event.\nFor events published by a model, this can be any arbitrary value or object.\nSee View's [publish]"
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "View#publish",
										"target": 239,
										"tsLinkText": ""
									},
									{
										"kind": "text",
										"text": " method for restrictions in passing data from a view to a model.\n\nIf you subscribe inside the model to an event that is published by the model,\nthe handler will be called immediately, before the publish method returns.\nIf you want to have it handled asynchronously, you can use a future message:\n"
									},
									{
										"kind": "code",
										"text": "`this.future(0).publish(\"scope\", \"event\", data)`"
									},
									{
										"kind": "text",
										"text": ".\n\nNote that there is no way of testing whether subscriptions exist or not (because models can exist independent of views).\nPublishing an event that has no subscriptions is about as cheap as that test would be, so feel free to always publish,\nthere is very little overhead.\n\nExample:\n"
									},
									{
										"kind": "code",
										"text": "```\nthis.publish(\"something\", \"changed\");\nthis.publish(this.id, \"moved\", this.pos);\n```"
									}
								]
							},
							"sources": [
								{
									"fileName": "multisynq-client/client/types.d.ts",
									"line": 306,
									"character": 8,
									"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L306"
								}
							],
							"typeParameter": [
								{
									"id": 151,
									"name": "T",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 152,
									"name": "scope",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "see [subscribe]"
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "Model#subscribe",
												"target": 155,
												"tsLinkText": ""
											},
											{
												"kind": "text",
												"text": "()"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 153,
									"name": "event",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "see [subscribe]"
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "Model#subscribe",
												"target": 155,
												"tsLinkText": ""
											},
											{
												"kind": "text",
												"text": "()"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 154,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "can be any value or object"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 151,
										"name": "T",
										"package": "@multisynq/client",
										"refersToTypeParameter": true
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"overwrites": {
								"type": "reference",
								"target": 83,
								"name": "PubSubParticipant.publish"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"target": 82,
						"name": "PubSubParticipant.publish"
					}
				},
				{
					"id": 181,
					"name": "random",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "multisynq-client/client/types.d.ts",
							"line": 479,
							"character": 8,
							"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L479"
						}
					],
					"signatures": [
						{
							"id": 182,
							"name": "random",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "*Generate a synchronized pseudo-random number**\n\nThis returns a floating-point, pseudo-random number in the range 0–1 (inclusive of 0, but not 1)\nwith approximately uniform distribution over that range\n(just like [Math.random](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/random)).\n\nSince the model computation is synchronized for every user on their device, the sequence of random numbers\ngenerated must also be exactly the same for everyone. This method provides access to such a random number generator."
									}
								]
							},
							"sources": [
								{
									"fileName": "multisynq-client/client/types.d.ts",
									"line": 479,
									"character": 8,
									"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L479"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					]
				},
				{
					"id": 155,
					"name": "subscribe",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "multisynq-client/client/types.d.ts",
							"line": 364,
							"character": 8,
							"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L364"
						}
					],
					"signatures": [
						{
							"id": 156,
							"name": "subscribe",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isPublic": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "**Register an event handler for an event published to a scope.**\n\nBoth "
									},
									{
										"kind": "code",
										"text": "`scope`"
									},
									{
										"kind": "text",
										"text": " and "
									},
									{
										"kind": "code",
										"text": "`event`"
									},
									{
										"kind": "text",
										"text": " can be arbitrary strings.\nTypically, the scope would select the object (or groups of objects) to respond to the event,\nand the event name would select which operation to perform.\n\nA commonly used scope is "
									},
									{
										"kind": "code",
										"text": "`this.id`"
									},
									{
										"kind": "text",
										"text": " (in a model) and "
									},
									{
										"kind": "code",
										"text": "`model.id`"
									},
									{
										"kind": "text",
										"text": " (in a view) to establish\na communication channel between a model and its corresponding view.\n\nYou can use any literal string as a global scope, or use ["
									},
									{
										"kind": "code",
										"text": "`this.sessionId`"
									},
									{
										"kind": "text",
										"text": "]"
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Model#sessionId",
										"target": 212,
										"tsLinkText": ""
									},
									{
										"kind": "text",
										"text": " for a\nsession-global scope (if your application supports multipe sessions at the same time).\nThe predefined events ["
									},
									{
										"kind": "code",
										"text": "`\"view-join\"`"
									},
									{
										"kind": "text",
										"text": "]"
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": ":view-join",
										"target": 159,
										"tsLinkText": ":view-join"
									},
									{
										"kind": "text",
										"text": " and ["
									},
									{
										"kind": "code",
										"text": "`\"view-exit\"`"
									},
									{
										"kind": "text",
										"text": "]"
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": ":view-exit",
										"target": 159,
										"tsLinkText": ":view-exit"
									},
									{
										"kind": "text",
										"text": "\nuse this session scope.\n\nThe handler must be a method of "
									},
									{
										"kind": "code",
										"text": "`this`"
									},
									{
										"kind": "text",
										"text": ", e.g. "
									},
									{
										"kind": "code",
										"text": "`subscribe(\"scope\", \"event\", this.methodName)`"
									},
									{
										"kind": "text",
										"text": " will schedule the\ninvocation of "
									},
									{
										"kind": "code",
										"text": "`this[\"methodName\"](data)`"
									},
									{
										"kind": "text",
										"text": " whenever "
									},
									{
										"kind": "code",
										"text": "`publish(\"scope\", \"event\", data)`"
									},
									{
										"kind": "text",
										"text": " is executed.\n\nIf "
									},
									{
										"kind": "code",
										"text": "`data`"
									},
									{
										"kind": "text",
										"text": " was passed to the [publish]"
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Model#publish",
										"target": 149,
										"tsLinkText": ""
									},
									{
										"kind": "text",
										"text": " call, it will be passed as an argument to the handler method.\nYou can have at most one argument. To pass multiple values, pass an Object or Array containing those values.\nNote that views can only pass serializable data to models, because those events are routed via a reflector server\n(see [View.publish]"
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "View#publish",
										"target": 239,
										"tsLinkText": ""
									},
									{
										"kind": "text",
										"text": ").\n\nExample:\n"
									},
									{
										"kind": "code",
										"text": "```\nthis.subscribe(\"something\", \"changed\", this.update);\nthis.subscribe(this.id, \"moved\", this.handleMove);\n```"
									},
									{
										"kind": "text",
										"text": "\nExample:\n"
									},
									{
										"kind": "code",
										"text": "```\nclass MyModel extends Multisynq.Model {\n  init() {\n    this.subscribe(this.id, \"moved\", this.handleMove);\n  }\n  handleMove({x,y}) {\n    this.x = x;\n    this.y = y;\n  }\n}\nclass MyView extends Multisynq.View {\n  constructor(model) {\n    this.modelId = model.id;\n  }\n  onpointermove(evt) {\n     const x = evt.x;\n     const y = evt.y;\n     this.publish(this.modelId, \"moved\", {x,y});\n  }\n}\n```"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": []
									}
								]
							},
							"sources": [
								{
									"fileName": "multisynq-client/client/types.d.ts",
									"line": 364,
									"character": 8,
									"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L364"
								}
							],
							"typeParameter": [
								{
									"id": 157,
									"name": "T",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 158,
									"name": "scope",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "the event scope (to distinguish between events of the same name used by different objects)"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 159,
									"name": "event",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "the event name (user-defined or system-defined)"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 160,
									"name": "handler",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "the event handler (must be a method of "
											},
											{
												"kind": "code",
												"text": "`this`"
											},
											{
												"kind": "text",
												"text": ", or the method name as string)"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 73,
										"typeArguments": [
											{
												"type": "reference",
												"target": 157,
												"name": "T",
												"package": "@multisynq/client",
												"refersToTypeParameter": true
											}
										],
										"name": "SubscriptionHandler",
										"package": "@multisynq/client",
										"qualifiedName": "\"@multisynq/client\".SubscriptionHandler"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"overwrites": {
								"type": "reference",
								"target": 89,
								"name": "PubSubParticipant.subscribe"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"target": 88,
						"name": "PubSubParticipant.subscribe"
					}
				},
				{
					"id": 161,
					"name": "unsubscribe",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "multisynq-client/client/types.d.ts",
							"line": 377,
							"character": 8,
							"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L377"
						}
					],
					"signatures": [
						{
							"id": 162,
							"name": "unsubscribe",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isPublic": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Unsubscribes this model's handler for the given event in the given scope."
									}
								]
							},
							"sources": [
								{
									"fileName": "multisynq-client/client/types.d.ts",
									"line": 377,
									"character": 8,
									"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L377"
								}
							],
							"typeParameter": [
								{
									"id": 163,
									"name": "T",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 164,
									"name": "scope",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "see [subscribe]"
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "Model#subscribe",
												"target": 155,
												"tsLinkText": ""
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 165,
									"name": "event",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "see [subscribe]"
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "Model#subscribe",
												"target": 155,
												"tsLinkText": ""
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 166,
									"name": "handler",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "the event handler (if not given, all handlers for the event are removed)"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 73,
										"typeArguments": [
											{
												"type": "reference",
												"target": 163,
												"name": "T",
												"package": "@multisynq/client",
												"refersToTypeParameter": true
											}
										],
										"name": "SubscriptionHandler",
										"package": "@multisynq/client",
										"qualifiedName": "\"@multisynq/client\".SubscriptionHandler"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"overwrites": {
								"type": "reference",
								"target": 99,
								"name": "PubSubParticipant.unsubscribe"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"target": 98,
						"name": "PubSubParticipant.unsubscribe"
					}
				},
				{
					"id": 167,
					"name": "unsubscribeAll",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "multisynq-client/client/types.d.ts",
							"line": 387,
							"character": 8,
							"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L387"
						}
					],
					"signatures": [
						{
							"id": 168,
							"name": "unsubscribeAll",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isPublic": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Unsubscribes all of this model's handlers for any event in any scope."
									}
								]
							},
							"sources": [
								{
									"fileName": "multisynq-client/client/types.d.ts",
									"line": 387,
									"character": 8,
									"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L387"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"overwrites": {
								"type": "reference",
								"target": 105,
								"name": "PubSubParticipant.unsubscribeAll"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"target": 104,
						"name": "PubSubParticipant.unsubscribeAll"
					}
				},
				{
					"id": 188,
					"name": "wellKnownModel",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "multisynq-client/client/types.d.ts",
							"line": 521,
							"character": 8,
							"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L521"
						}
					],
					"signatures": [
						{
							"id": 189,
							"name": "wellKnownModel",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Access a model that was registered previously using beWellKnownAs().\n\nNote: The instance of your root Model class is automatically made well-known as "
									},
									{
										"kind": "code",
										"text": "`\"modelRoot\"`"
									},
									{
										"kind": "text",
										"text": "\nand passed to the [constructor]"
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "View#constructor",
										"target": {
											"sourceFileName": "docs/node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Object.constructor"
										},
										"tsLinkText": ""
									},
									{
										"kind": "text",
										"text": " of your root View during [Session.join]"
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Session.join",
										"target": 355,
										"tsLinkText": ""
									},
									{
										"kind": "text",
										"text": ".\n\nExample:\n"
									},
									{
										"kind": "code",
										"text": "```\nconst topModel = this.wellKnownModel(\"modelRoot\");\n```"
									}
								]
							},
							"sources": [
								{
									"fileName": "multisynq-client/client/types.d.ts",
									"line": 521,
									"character": 8,
									"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L521"
								}
							],
							"typeParameter": [
								{
									"id": 190,
									"name": "M",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 118,
										"name": "Model",
										"package": "@multisynq/client",
										"qualifiedName": "\"@multisynq/client\".Model"
									}
								}
							],
							"parameters": [
								{
									"id": 191,
									"name": "name",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 118,
								"name": "Model",
								"package": "@multisynq/client",
								"qualifiedName": "\"@multisynq/client\".Model"
							}
						}
					]
				},
				{
					"id": 120,
					"name": "create",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "multisynq-client/client/types.d.ts",
							"line": 115,
							"character": 15,
							"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L115"
						}
					],
					"signatures": [
						{
							"id": 121,
							"name": "create",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isPublic": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "__Create an instance of a Model subclass.__\n\nThe instance will be registered for automatical snapshotting, and is assigned an [id]"
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Model#id",
										"target": 142,
										"tsLinkText": ""
									},
									{
										"kind": "text",
										"text": ".\n\nThen it will call the user-defined [init()]"
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Model#init",
										"target": 143,
										"tsLinkText": ""
									},
									{
										"kind": "text",
										"text": " method to initialize the instance,\npassing the "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "options",
										"target": 124,
										"tsLinkText": ""
									},
									{
										"kind": "text",
										"text": ".\n\n**Note:** When your model instance is no longer needed, you must [destroy]"
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Model#destroy",
										"target": 147,
										"tsLinkText": ""
									},
									{
										"kind": "text",
										"text": " it.\nOtherwise it will be kept in the snapshot forever.\n\n**Warning**: never create a Model instance using "
									},
									{
										"kind": "code",
										"text": "`new`"
									},
									{
										"kind": "text",
										"text": ", or override its constructor. See [above]"
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Model",
										"target": 118,
										"tsLinkText": ""
									},
									{
										"kind": "text",
										"text": ".\n\nExample:\n"
									},
									{
										"kind": "code",
										"text": "```\nthis.foo = FooModel.create({answer: 123});\n```"
									}
								]
							},
							"sources": [
								{
									"fileName": "multisynq-client/client/types.d.ts",
									"line": 115,
									"character": 15,
									"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L115"
								}
							],
							"typeParameter": [
								{
									"id": 122,
									"name": "T",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "query",
										"queryType": {
											"type": "reference",
											"target": 118,
											"name": "Model",
											"package": "@multisynq/client",
											"qualifiedName": "\"@multisynq/client\".Model"
										}
									}
								}
							],
							"parameters": [
								{
									"id": 123,
									"name": "this",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 122,
										"name": "T",
										"package": "@multisynq/client",
										"refersToTypeParameter": true
									}
								},
								{
									"id": 124,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "option object to be passed to [init()]"
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "Model#init",
												"target": 143,
												"tsLinkText": ""
											},
											{
												"kind": "text",
												"text": ".\n    There are no system-defined options as of now, you're free to define your own."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "docs/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "InstanceType"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 122,
										"name": "T",
										"package": "@multisynq/client",
										"refersToTypeParameter": true
									}
								],
								"name": "InstanceType",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 134,
					"name": "gatherClassTypes",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "multisynq-client/client/types.d.ts",
							"line": 243,
							"character": 15,
							"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L243"
						}
					],
					"signatures": [
						{
							"id": 135,
							"name": "gatherClassTypes",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Find classes inside an external library\n\nThis recursivley traverses a dummy object and gathers all object classes found.\nReturns a mapping that can be returned from a Model's static "
									},
									{
										"kind": "code",
										"text": "`types()`"
									},
									{
										"kind": "text",
										"text": " method.\n\nThis can be used to gather all internal class types of a third party library\nthat otherwise would not be accessible to the serializer\n\nExample: If "
									},
									{
										"kind": "code",
										"text": "`Foo`"
									},
									{
										"kind": "text",
										"text": " is a class from a third party library\n  that internally create a "
									},
									{
										"kind": "code",
										"text": "`Bar`"
									},
									{
										"kind": "text",
										"text": " instance,\n  this would find both classes\n"
									},
									{
										"kind": "code",
										"text": "```\nclass Bar {}\nclass Foo { bar = new Bar(); }\nstatic types() {\n   const sample = new Foo();\n   return this.gatherClassTypes(sample, \"MyLib\");\n   // returns { \"MyLib.Foo\": Foo, \"MyLib.Bar\": Bar }\n}\n```"
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "2.0"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "multisynq-client/client/types.d.ts",
									"line": 243,
									"character": 15,
									"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L243"
								}
							],
							"typeParameter": [
								{
									"id": 136,
									"name": "T",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "docs/node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Object"
										},
										"name": "Object",
										"package": "typescript"
									}
								}
							],
							"parameters": [
								{
									"id": 137,
									"name": "dummyObject",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "an instance of a class from the library"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 136,
										"name": "T",
										"package": "@multisynq/client",
										"refersToTypeParameter": true
									}
								},
								{
									"id": 138,
									"name": "prefix",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "a prefix to add to the class names"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "docs/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": 2,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Class",
										"package": "@multisynq/client",
										"qualifiedName": "\"@multisynq/client\".Class"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 125,
					"name": "register",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "multisynq-client/client/types.d.ts",
							"line": 136,
							"character": 15,
							"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L136"
						}
					],
					"signatures": [
						{
							"id": 126,
							"name": "register",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isPublic": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "__Registers this model subclass with Multisynq__\n\nIt is necessary to register all Model subclasses so the serializer can recreate their instances from a snapshot.\nAlso, the [session id]"
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Session.join",
										"target": 355,
										"tsLinkText": ""
									},
									{
										"kind": "text",
										"text": " is derived by hashing the source code of all registered classes.\n\n**Important**: for the hashing to work reliably across browsers, be sure to specify "
									},
									{
										"kind": "code",
										"text": "`charset=\"utf-8\"`"
									},
									{
										"kind": "text",
										"text": " for your "
									},
									{
										"kind": "code",
										"text": "`<html>`"
									},
									{
										"kind": "text",
										"text": " or all "
									},
									{
										"kind": "code",
										"text": "`<script>`"
									},
									{
										"kind": "text",
										"text": " tags.\n\nExample\n"
									},
									{
										"kind": "code",
										"text": "```\nclass MyModel extends Multisynq.Model {\n  ...\n}\nMyModel.register(\"MyModel\")\n```"
									}
								]
							},
							"sources": [
								{
									"fileName": "multisynq-client/client/types.d.ts",
									"line": 136,
									"character": 15,
									"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L136"
								}
							],
							"parameters": [
								{
									"id": 127,
									"name": "classId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Id for this model class. Must be unique. If you use the same class name in two files, use e.g. "
											},
											{
												"kind": "code",
												"text": "`\"file1/MyModel\"`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`\"file2/MyModel\"`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 132,
					"name": "types",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "multisynq-client/client/types.d.ts",
							"line": 216,
							"character": 15,
							"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L216"
						}
					],
					"signatures": [
						{
							"id": 133,
							"name": "types",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isPublic": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "__Static declaration of how to serialize non-model classes.__\n\nThe Multisynq snapshot mechanism only knows about "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Model",
										"target": 118,
										"tsLinkText": ""
									},
									{
										"kind": "text",
										"text": " subclasses.\nIf you want to store instances of non-model classes in your model, override this method.\n\n"
									},
									{
										"kind": "code",
										"text": "`types()`"
									},
									{
										"kind": "text",
										"text": " needs to return an Object that maps _names_ to _class descriptions_:\n- the name can be any string, it just has to be unique within your app\n- the class description can either be just the class itself (if the serializer should\n  snapshot all its fields, see first example below), or an object with "
									},
									{
										"kind": "code",
										"text": "`write()`"
									},
									{
										"kind": "text",
										"text": " and "
									},
									{
										"kind": "code",
										"text": "`read()`"
									},
									{
										"kind": "text",
										"text": " methods to\n  convert instances from and to their serializable form (see second example below).\n- the serialized form answered by "
									},
									{
										"kind": "code",
										"text": "`write()`"
									},
									{
										"kind": "text",
										"text": " can be almost anything. E.g. if it answers an Array of objects\n  then the serializer will be called for each of those objects. Conversely, these objects will be deserialized\n  before passing the Array to "
									},
									{
										"kind": "code",
										"text": "`read()`"
									},
									{
										"kind": "text",
										"text": ".\n\nThe types only need to be declared once, even if several different Model subclasses are using them.\n\n__NOTE:__ This is currently the only way to customize serialization (for example to keep snapshots fast and small).\nThe serialization of Model subclasses themselves can not be customized.\n\nExample: To use the default serializer just declare the class:</caption>\n"
									},
									{
										"kind": "code",
										"text": "```\nclass MyModel extends Multisynq.Model {\n  static types() {\n    return {\n      \"SomeUniqueName\": MyNonModelClass,\n      \"THREE.Vector3\": THREE.Vector3,        // serialized as '{\"x\":...,\"y\":...,\"z\":...}'\n      \"THREE.Quaternion\": THREE.Quaternion,\n    };\n  }\n}\n```"
									},
									{
										"kind": "text",
										"text": "\n\nExample: To define your own serializer, declare read and write functions:\n"
									},
									{
										"kind": "code",
										"text": "```\nclass MyModel extends Multisynq.Model {\n  static types() {\n    return {\n      \"THREE.Vector3\": {\n        cls: THREE.Vector3,\n        write: v => [v.x, v.y, v.z],        // serialized as '[...,...,...]' which is shorter than the default above\n        read: a => new THREE.Vector3(a[0], a[1], a[2]),\n      },\n      \"THREE.Color\": {\n        cls: THREE.Color,\n        write: color => '#' + color.getHexString(),\n        read: state => new THREE.Color(state),\n      },\n    };\n  }\n}\n```"
									}
								]
							},
							"sources": [
								{
									"fileName": "multisynq-client/client/types.d.ts",
									"line": 216,
									"character": 15,
									"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L216"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "docs/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 2,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "Class",
												"package": "@multisynq/client",
												"qualifiedName": "\"@multisynq/client\".Class"
											},
											{
												"type": "reference",
												"target": 72,
												"name": "Serializer",
												"package": "@multisynq/client",
												"qualifiedName": "\"@multisynq/client\".Serializer"
											}
										]
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 128,
					"name": "wellKnownModel",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "multisynq-client/client/types.d.ts",
							"line": 160,
							"character": 15,
							"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L160"
						}
					],
					"signatures": [
						{
							"id": 129,
							"name": "wellKnownModel",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Static version of [wellKnownModel()]"
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Model#wellKnownModel",
										"target": 188,
										"tsLinkText": ""
									},
									{
										"kind": "text",
										"text": " for currently executing model.\n\nThis can be used to emulate static accessors, e.g. for lazy initialization.\n\n__WARNING!__ Do not store the result in a static variable.\nLike any global state, that can lead to divergence.\n\nWill throw an error if called from outside model code.\n\nExample:\n"
									},
									{
										"kind": "code",
										"text": "```\nstatic get Default() {\n    let default = this.wellKnownModel(\"DefaultModel\");\n    if (!default) {\n        console.log(\"Creating default\")\n        default = MyModel.create();\n        default.beWellKnownAs(\"DefaultModel\");\n    }\n    return default;\n}\n```"
									}
								]
							},
							"sources": [
								{
									"fileName": "multisynq-client/client/types.d.ts",
									"line": 160,
									"character": 15,
									"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L160"
								}
							],
							"typeParameter": [
								{
									"id": 130,
									"name": "M",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 118,
										"name": "Model",
										"package": "@multisynq/client",
										"qualifiedName": "\"@multisynq/client\".Model"
									}
								}
							],
							"parameters": [
								{
									"id": 131,
									"name": "name",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 118,
								"name": "Model",
								"package": "@multisynq/client",
								"qualifiedName": "\"@multisynq/client\".Model"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						140
					]
				},
				{
					"title": "Properties",
					"children": [
						142,
						212,
						213,
						139
					]
				},
				{
					"title": "Accessors",
					"children": [
						169
					]
				},
				{
					"title": "Methods",
					"children": [
						185,
						177,
						199,
						147,
						171,
						192,
						143,
						196,
						183,
						207,
						149,
						181,
						155,
						161,
						167,
						188,
						120,
						134,
						125,
						132,
						128
					]
				}
			],
			"sources": [
				{
					"fileName": "multisynq-client/client/types.d.ts",
					"line": 90,
					"character": 17,
					"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L90"
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 78,
					"typeArguments": [
						{
							"type": "reflection",
							"declaration": {
								"id": 119,
								"name": "__type",
								"variant": "declaration",
								"kind": 65536,
								"flags": {},
								"sources": [
									{
										"fileName": "multisynq-client/client/types.d.ts",
										"line": 90,
										"character": 49,
										"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L90"
									}
								]
							}
						}
					],
					"name": "PubSubParticipant",
					"package": "@multisynq/client",
					"qualifiedName": "\"@multisynq/client\".PubSubParticipant"
				}
			]
		},
		{
			"id": 78,
			"name": "PubSubParticipant",
			"variant": "declaration",
			"kind": 128,
			"flags": {
				"isAbstract": true
			},
			"children": [
				{
					"id": 79,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 80,
							"name": "new PubSubParticipant",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"typeParameter": [
								{
									"id": 81,
									"name": "SubOptions",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {}
								}
							],
							"type": {
								"type": "reference",
								"target": 78,
								"typeArguments": [
									{
										"type": "reference",
										"target": 81,
										"name": "SubOptions",
										"package": "@multisynq/client",
										"qualifiedName": "\"@multisynq/client\".PubSubParticipant.SubOptions",
										"refersToTypeParameter": true
									}
								],
								"name": "PubSubParticipant",
								"package": "@multisynq/client",
								"qualifiedName": "\"@multisynq/client\".PubSubParticipant"
							}
						}
					]
				},
				{
					"id": 82,
					"name": "publish",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "multisynq-client/client/types.d.ts",
							"line": 33,
							"character": 8,
							"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L33"
						}
					],
					"signatures": [
						{
							"id": 83,
							"name": "publish",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "multisynq-client/client/types.d.ts",
									"line": 33,
									"character": 8,
									"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L33"
								}
							],
							"typeParameter": [
								{
									"id": 84,
									"name": "T",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 85,
									"name": "scope",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 86,
									"name": "event",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 87,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 84,
										"name": "T",
										"package": "@multisynq/client",
										"refersToTypeParameter": true
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 88,
					"name": "subscribe",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "multisynq-client/client/types.d.ts",
							"line": 34,
							"character": 8,
							"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L34"
						}
					],
					"signatures": [
						{
							"id": 89,
							"name": "subscribe",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "multisynq-client/client/types.d.ts",
									"line": 34,
									"character": 8,
									"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L34"
								}
							],
							"typeParameter": [
								{
									"id": 90,
									"name": "T",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 91,
									"name": "scope",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 92,
									"name": "event",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 93,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 94,
															"name": "event",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "multisynq-client/client/types.d.ts",
																	"line": 36,
																	"character": 30,
																	"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L36"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																94
															]
														}
													],
													"sources": [
														{
															"fileName": "multisynq-client/client/types.d.ts",
															"line": 36,
															"character": 28,
															"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L36"
														}
													]
												}
											},
											{
												"type": "intersection",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 95,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 96,
																	"name": "event",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "multisynq-client/client/types.d.ts",
																			"line": 36,
																			"character": 51,
																			"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L36"
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		96
																	]
																}
															],
															"sources": [
																{
																	"fileName": "multisynq-client/client/types.d.ts",
																	"line": 36,
																	"character": 49,
																	"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L36"
																}
															]
														}
													},
													{
														"type": "reference",
														"target": 81,
														"name": "SubOptions",
														"package": "@multisynq/client",
														"qualifiedName": "\"@multisynq/client\".PubSubParticipant.SubOptions",
														"refersToTypeParameter": true
													}
												]
											}
										]
									}
								},
								{
									"id": 97,
									"name": "handler",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 73,
										"typeArguments": [
											{
												"type": "reference",
												"target": 90,
												"name": "T",
												"package": "@multisynq/client",
												"refersToTypeParameter": true
											}
										],
										"name": "SubscriptionHandler",
										"package": "@multisynq/client",
										"qualifiedName": "\"@multisynq/client\".SubscriptionHandler"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 98,
					"name": "unsubscribe",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "multisynq-client/client/types.d.ts",
							"line": 39,
							"character": 8,
							"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L39"
						}
					],
					"signatures": [
						{
							"id": 99,
							"name": "unsubscribe",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "multisynq-client/client/types.d.ts",
									"line": 39,
									"character": 8,
									"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L39"
								}
							],
							"typeParameter": [
								{
									"id": 100,
									"name": "T",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 101,
									"name": "scope",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 102,
									"name": "event",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 103,
									"name": "handler",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 73,
										"typeArguments": [
											{
												"type": "reference",
												"target": 100,
												"name": "T",
												"package": "@multisynq/client",
												"refersToTypeParameter": true
											}
										],
										"name": "SubscriptionHandler",
										"package": "@multisynq/client",
										"qualifiedName": "\"@multisynq/client\".SubscriptionHandler"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 104,
					"name": "unsubscribeAll",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "multisynq-client/client/types.d.ts",
							"line": 44,
							"character": 8,
							"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L44"
						}
					],
					"signatures": [
						{
							"id": 105,
							"name": "unsubscribeAll",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "multisynq-client/client/types.d.ts",
									"line": 44,
									"character": 8,
									"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L44"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						79
					]
				},
				{
					"title": "Methods",
					"children": [
						82,
						88,
						98,
						104
					]
				}
			],
			"sources": [
				{
					"fileName": "multisynq-client/client/types.d.ts",
					"line": 32,
					"character": 26,
					"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L32"
				}
			],
			"typeParameters": [
				{
					"id": 106,
					"name": "SubOptions",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 118,
					"name": "Model"
				},
				{
					"type": "reference",
					"target": 232,
					"name": "View"
				}
			]
		},
		{
			"id": 232,
			"name": "View",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 234,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"sources": [
						{
							"fileName": "multisynq-client/client/types.d.ts",
							"line": 663,
							"character": 8,
							"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L663"
						}
					],
					"signatures": [
						{
							"id": 235,
							"name": "new View",
							"variant": "signature",
							"kind": 16384,
							"flags": {
								"isPublic": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A View instance is created in "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Session.join",
										"target": 355,
										"tsLinkText": ""
									},
									{
										"kind": "text",
										"text": ", and the root model is passed into its constructor.\n\nThis inherited constructor does not use the model in any way.\nYour constructor should recreate the view state to exactly match what is in the model.\nIt should also [subscribe]"
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "View#subscribe",
										"target": 245,
										"tsLinkText": ""
									},
									{
										"kind": "text",
										"text": " to any changes published by the model.\nTypically, a view would also subscribe to the browser's or framework's input events,\nand in response [publish]"
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "View#publish",
										"target": 239,
										"tsLinkText": ""
									},
									{
										"kind": "text",
										"text": " events for the model to consume.\n\nThe constructor will, however, register the view and assign it an [id]"
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "View#id"
									},
									{
										"kind": "text",
										"text": ".\n\n**Note:** When your view instance is no longer needed, you must [detach]"
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "View#detach",
										"target": 237,
										"tsLinkText": ""
									},
									{
										"kind": "text",
										"text": " it.\nOtherwise it will be kept in memory forever."
									}
								]
							},
							"sources": [
								{
									"fileName": "multisynq-client/client/types.d.ts",
									"line": 663,
									"character": 8,
									"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L663"
								}
							],
							"parameters": [
								{
									"id": 236,
									"name": "model",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "the view's model"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 118,
										"name": "Model",
										"package": "@multisynq/client",
										"qualifiedName": "\"@multisynq/client\".Model"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 232,
								"name": "View",
								"package": "@multisynq/client",
								"qualifiedName": "\"@multisynq/client\".View"
							},
							"overwrites": {
								"type": "reference",
								"target": 80,
								"name": "PubSubParticipant.constructor"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"target": 79,
						"name": "PubSubParticipant.constructor"
					}
				},
				{
					"id": 267,
					"name": "viewId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the view."
							}
						]
					},
					"sources": [
						{
							"fileName": "multisynq-client/client/types.d.ts",
							"line": 819,
							"character": 8,
							"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L819"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 233,
					"name": "Multisynq",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isStatic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "make module exports accessible via any subclass"
							}
						]
					},
					"sources": [
						{
							"fileName": "multisynq-client/client/types.d.ts",
							"line": 914,
							"character": 15,
							"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L914"
						}
					],
					"type": {
						"type": "reference",
						"target": 462,
						"name": "Multisynq",
						"package": "@multisynq/client",
						"qualifiedName": "\"@multisynq/client\".Multisynq"
					}
				},
				{
					"id": 265,
					"name": "activeSubscription",
					"variant": "declaration",
					"kind": 262144,
					"flags": {},
					"sources": [
						{
							"fileName": "multisynq-client/client/types.d.ts",
							"line": 813,
							"character": 12,
							"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L813"
						}
					],
					"getSignature": {
						"id": 266,
						"name": "activeSubscription",
						"variant": "signature",
						"kind": 524288,
						"flags": {
							"isPublic": true
						},
						"comment": {
							"summary": [
								{
									"kind": "text",
									"text": "Scope, event, and source of the currently executing subscription handler.\n\nThe "
								},
								{
									"kind": "code",
									"text": "`source' is either `"
								},
								{
									"kind": "text",
									"text": "\"model\""
								},
								{
									"kind": "code",
									"text": "` or `"
								},
								{
									"kind": "text",
									"text": "\"view\""
								},
								{
									"kind": "code",
									"text": "`.\n`"
								},
								{
									"kind": "text",
									"text": "\n"
								},
								{
									"kind": "code",
									"text": "```\n// this.subscribe(\"*\", \"*\", this.logEvents)\nlogEvents(data: any) {\n    const {scope, event, source} = this.activeSubscription;\n    console.log(`Event in view from ${source} ${scope}:${event} with`, data);\n}\n```"
								}
							],
							"blockTags": [
								{
									"tag": "@returns",
									"content": [
										{
											"kind": "code",
											"text": "`{scope, event, source}`"
										},
										{
											"kind": "text",
											"text": " or "
										},
										{
											"kind": "code",
											"text": "`undefined`"
										},
										{
											"kind": "text",
											"text": " if not in a subscription handler."
										}
									]
								},
								{
									"tag": "@since",
									"content": [
										{
											"kind": "text",
											"text": "2.0"
										}
									]
								}
							]
						},
						"sources": [
							{
								"fileName": "multisynq-client/client/types.d.ts",
								"line": 813,
								"character": 12,
								"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L813"
							}
						],
						"type": {
							"type": "reference",
							"target": 113,
							"name": "EventType",
							"package": "@multisynq/client",
							"qualifiedName": "\"@multisynq/client\".EventType"
						}
					}
				},
				{
					"id": 286,
					"name": "session",
					"variant": "declaration",
					"kind": 262144,
					"flags": {},
					"sources": [
						{
							"fileName": "multisynq-client/client/types.d.ts",
							"line": 911,
							"character": 12,
							"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L911"
						}
					],
					"getSignature": {
						"id": 287,
						"name": "session",
						"variant": "signature",
						"kind": 524288,
						"flags": {
							"isPublic": true
						},
						"comment": {
							"summary": [
								{
									"kind": "text",
									"text": "Access the session object.\n\nNote: The view instance may be taken down and reconstructed during the lifetime of a session. the "
								},
								{
									"kind": "code",
									"text": "`view`"
								},
								{
									"kind": "text",
									"text": " property of the session may differ from "
								},
								{
									"kind": "code",
									"text": "`this`"
								},
								{
									"kind": "text",
									"text": ", when you store the view instance in our data structure outside of Multisynq and access it sometime later."
								}
							]
						},
						"sources": [
							{
								"fileName": "multisynq-client/client/types.d.ts",
								"line": 911,
								"character": 12,
								"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L911"
							}
						],
						"type": {
							"type": "reference",
							"target": 288,
							"typeArguments": [
								{
									"type": "reference",
									"target": 232,
									"name": "View",
									"package": "@multisynq/client",
									"qualifiedName": "\"@multisynq/client\".View"
								}
							],
							"name": "MultisynqSession",
							"package": "@multisynq/client",
							"qualifiedName": "\"@multisynq/client\".MultisynqSession"
						}
					}
				},
				{
					"id": 237,
					"name": "detach",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "multisynq-client/client/types.d.ts",
							"line": 681,
							"character": 8,
							"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L681"
						}
					],
					"signatures": [
						{
							"id": 238,
							"name": "detach",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isPublic": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "**Unsubscribes all [subscriptions]"
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "View#subscribe",
										"target": 245,
										"tsLinkText": ""
									},
									{
										"kind": "text",
										"text": " this model has,\nand removes it from the list of views**\n\nThis needs to be called when a view is no longer needed to prevent memory leaks.\n\nExample:\n"
									},
									{
										"kind": "code",
										"text": "```\nremoveChild(child) {\n   const index = this.children.indexOf(child);\n   this.children.splice(index, 1);\n   child.detach();\n}\n```"
									}
								]
							},
							"sources": [
								{
									"fileName": "multisynq-client/client/types.d.ts",
									"line": 681,
									"character": 8,
									"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L681"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 275,
					"name": "externalNow",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "multisynq-client/client/types.d.ts",
							"line": 866,
							"character": 8,
							"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L866"
						}
					],
					"signatures": [
						{
							"id": 276,
							"name": "externalNow",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "*The latest timestamp received from reflector**\n\nTimestamps are received asynchronously from the reflector at the specified tick rate.\n[Model time]{@View#now} however only advances synchronously on every iteration of the [main loop]"
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Session.join",
										"target": 355,
										"tsLinkText": ""
									},
									{
										"kind": "text",
										"text": ".\nUsually "
									},
									{
										"kind": "code",
										"text": "`now == externalNow`"
									},
									{
										"kind": "text",
										"text": ", but if the model has not caught up yet, then "
									},
									{
										"kind": "code",
										"text": "`now < externalNow`"
									},
									{
										"kind": "text",
										"text": ".\n\nWe call the difference \"backlog\". If the backlog is too large, Multisynq will put an overlay on the scene,\nand remove it once the model simulation has caught up. The "
									},
									{
										"kind": "code",
										"text": "`\"synced\"`"
									},
									{
										"kind": "text",
										"text": " event is sent when that happens.\n\nThe "
									},
									{
										"kind": "code",
										"text": "`externalNow`"
									},
									{
										"kind": "text",
										"text": " value is rarely used by apps but may be useful if you need to synchronize views to real-time.\n\nExample:\n"
									},
									{
										"kind": "code",
										"text": "```\nconst backlog = this.externalNow() - this.now();\n```"
									}
								]
							},
							"sources": [
								{
									"fileName": "multisynq-client/client/types.d.ts",
									"line": 866,
									"character": 8,
									"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L866"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					]
				},
				{
					"id": 277,
					"name": "extrapolatedNow",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "multisynq-client/client/types.d.ts",
							"line": 880,
							"character": 8,
							"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L880"
						}
					],
					"signatures": [
						{
							"id": 278,
							"name": "extrapolatedNow",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "**The model time extrapolated beyond latest timestamp received from reflector**\n\nTimestamps are received asynchronously from the reflector at the specified tick rate.\nIn-between ticks or messages, neither [now()]"
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "View#now",
										"target": 273,
										"tsLinkText": ""
									},
									{
										"kind": "text",
										"text": " nor [externalNow()]"
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "View#externalNow",
										"target": 275,
										"tsLinkText": ""
									},
									{
										"kind": "text",
										"text": " advances.\n"
									},
									{
										"kind": "code",
										"text": "`extrapolatedNow`"
									},
									{
										"kind": "text",
										"text": " is "
									},
									{
										"kind": "code",
										"text": "`externalNow`"
									},
									{
										"kind": "text",
										"text": " plus the local time elapsed since that timestamp was received,\nso it always advances.\n\n"
									},
									{
										"kind": "code",
										"text": "`extrapolatedNow()`"
									},
									{
										"kind": "text",
										"text": " will always be >= "
									},
									{
										"kind": "code",
										"text": "`now()`"
									},
									{
										"kind": "text",
										"text": " and "
									},
									{
										"kind": "code",
										"text": "`externalNow()`"
									},
									{
										"kind": "text",
										"text": ".\nHowever, it is only guaranteed to be monotonous in-between time stamps received from the reflector\n(there is no \"smoothing\" to reconcile local time with reflector time)."
									}
								]
							},
							"sources": [
								{
									"fileName": "multisynq-client/client/types.d.ts",
									"line": 880,
									"character": 8,
									"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L880"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					]
				},
				{
					"id": 268,
					"name": "future",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "multisynq-client/client/types.d.ts",
							"line": 827,
							"character": 8,
							"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L827"
						}
					],
					"signatures": [
						{
							"id": 269,
							"name": "future",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "*Schedule a message for future execution**\nThis method is here for symmetry with [Model.future]"
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Model#future",
										"target": 171,
										"tsLinkText": ""
									},
									{
										"kind": "text",
										"text": ".\n\nIt simply schedules the execution using "
									},
									{
										"kind": "code",
										"text": "`window.setTimeout`"
									},
									{
										"kind": "text",
										"text": ".\nThe only advantage to using this over setTimeout() is consistent style."
									}
								]
							},
							"sources": [
								{
									"fileName": "multisynq-client/client/types.d.ts",
									"line": 827,
									"character": 8,
									"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L827"
								}
							],
							"parameters": [
								{
									"id": 270,
									"name": "tOffset",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "this"
							}
						}
					]
				},
				{
					"id": 273,
					"name": "now",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "multisynq-client/client/types.d.ts",
							"line": 848,
							"character": 8,
							"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L848"
						}
					],
					"signatures": [
						{
							"id": 274,
							"name": "now",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "*The model's current time**\n\nThis is the time of how far the model has been simulated.\nNormally this corresponds roughly to real-world time, since the reflector is generating\ntime stamps based on real-world time.\n\nIf there is [backlog]"
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "View#externalNow",
										"target": 275,
										"tsLinkText": ""
									},
									{
										"kind": "text",
										"text": " however (e.g while a newly joined user is catching up),\nthis time will advance much faster than real time.\n\nThe unit is milliseconds (1/1000 second) but the value can be fractional, it is a floating-point value.\n\nReturns: the model's time in milliseconds since the first user created the session."
									}
								]
							},
							"sources": [
								{
									"fileName": "multisynq-client/client/types.d.ts",
									"line": 848,
									"character": 8,
									"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L848"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					]
				},
				{
					"id": 239,
					"name": "publish",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "multisynq-client/client/types.d.ts",
							"line": 711,
							"character": 8,
							"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L711"
						}
					],
					"signatures": [
						{
							"id": 240,
							"name": "publish",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isPublic": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "**Publish an event to a scope.**\n\nEvents are the main form of communication between models and views in Multisynq.\nBoth models and views can publish events, and subscribe to each other's events.\nModel-to-model and view-to-view subscriptions are possible, too.\n\nSee [Model.subscribe]"
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Model#subscribe",
										"target": 155,
										"tsLinkText": ""
									},
									{
										"kind": "text",
										"text": " for a discussion of **scopes** and **event names**.\n\nOptionally, you can pass some **data** along with the event.\nFor events published by a view and received by a model,\nthe data needs to be serializable, because it will be sent via the reflector to all users.\nFor view-to-view events it can be any value or object.\n\nNote that there is no way of testing whether subscriptions exist or not (because models can exist independent of views).\nPublishing an event that has no subscriptions is about as cheap as that test would be, so feel free to always publish,\nthere is very little overhead.\n\nExample:\n"
									},
									{
										"kind": "code",
										"text": "```\nthis.publish(\"input\", \"keypressed\", {key: 'A'});\nthis.publish(this.model.id, \"move-to\", this.pos);\n```"
									}
								]
							},
							"sources": [
								{
									"fileName": "multisynq-client/client/types.d.ts",
									"line": 711,
									"character": 8,
									"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L711"
								}
							],
							"typeParameter": [
								{
									"id": 241,
									"name": "T",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 242,
									"name": "scope",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "see [subscribe]"
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "Model#subscribe",
												"target": 155,
												"tsLinkText": ""
											},
											{
												"kind": "text",
												"text": "()"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 243,
									"name": "event",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "see [subscribe]"
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "Model#subscribe",
												"target": 155,
												"tsLinkText": ""
											},
											{
												"kind": "text",
												"text": "()"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 244,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "can be any value or object (for view-to-model, must be serializable)"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 241,
										"name": "T",
										"package": "@multisynq/client",
										"refersToTypeParameter": true
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"overwrites": {
								"type": "reference",
								"target": 83,
								"name": "PubSubParticipant.publish"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"target": 82,
						"name": "PubSubParticipant.publish"
					}
				},
				{
					"id": 271,
					"name": "random",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "multisynq-client/client/types.d.ts",
							"line": 833,
							"character": 8,
							"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L833"
						}
					],
					"signatures": [
						{
							"id": 272,
							"name": "random",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "*Answers "
									},
									{
										"kind": "code",
										"text": "`Math.random()`"
									},
									{
										"kind": "text",
										"text": "**\n\nThis method is here purely for symmetry with [Model.random]"
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Model#random",
										"target": 181,
										"tsLinkText": ""
									},
									{
										"kind": "text",
										"text": "."
									}
								]
							},
							"sources": [
								{
									"fileName": "multisynq-client/client/types.d.ts",
									"line": 833,
									"character": 8,
									"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L833"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					]
				},
				{
					"id": 245,
					"name": "subscribe",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "multisynq-client/client/types.d.ts",
							"line": 770,
							"character": 8,
							"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L770"
						}
					],
					"signatures": [
						{
							"id": 246,
							"name": "subscribe",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isPublic": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "**Register an event handler for an event published to a scope.**\n\nBoth "
									},
									{
										"kind": "code",
										"text": "`scope`"
									},
									{
										"kind": "text",
										"text": " and "
									},
									{
										"kind": "code",
										"text": "`event`"
									},
									{
										"kind": "text",
										"text": " can be arbitrary strings.\nTypically, the scope would select the object (or groups of objects) to respond to the event,\nand the event name would select which operation to perform.\n\nA commonly used scope is "
									},
									{
										"kind": "code",
										"text": "`this.id`"
									},
									{
										"kind": "text",
										"text": " (in a model) and "
									},
									{
										"kind": "code",
										"text": "`model.id`"
									},
									{
										"kind": "text",
										"text": " (in a view) to establish\na communication channel between a model and its corresponding view.\n\nUnlike in a model's [subscribe]"
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Model#subscribe",
										"target": 155,
										"tsLinkText": ""
									},
									{
										"kind": "text",
										"text": " method, you can specify when the event should be handled:\n- **Queued:** The handler will be called on the next run of the [main loop]"
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Session.join",
										"target": 355,
										"tsLinkText": ""
									},
									{
										"kind": "text",
										"text": ",\n  the same number of times this event was published.\n  This is useful if you need each piece of data that was passed in each [publish]"
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Model#publish",
										"target": 149,
										"tsLinkText": ""
									},
									{
										"kind": "text",
										"text": " call.\n\n  An example would be log entries generated in the model that the view is supposed to print.\n  Even if more than one log event is published in one render frame, the view needs to receive each one.\n\n  **"
									},
									{
										"kind": "code",
										"text": "`{ event: \"name\", handling: \"queued\" }`"
									},
									{
										"kind": "text",
										"text": " is the default.  Simply specify "
									},
									{
										"kind": "code",
										"text": "`\"name\"`"
									},
									{
										"kind": "text",
										"text": " instead.**\n\n- **Once Per Frame:** The handler will be called only _once_ during the next run of the [main loop]"
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Session.join",
										"target": 355,
										"tsLinkText": ""
									},
									{
										"kind": "text",
										"text": ".\n  If [publish]"
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Model#publish",
										"target": 149,
										"tsLinkText": ""
									},
									{
										"kind": "text",
										"text": " was called multiple times, the handler will only be invoked once,\n  passing the data of only the last "
									},
									{
										"kind": "code",
										"text": "`publish`"
									},
									{
										"kind": "text",
										"text": " call.\n\n  For example, a view typically would only be interested in the current position of a model to render it.\n  Since rendering only happens once per frame, it should subscribe using the "
									},
									{
										"kind": "code",
										"text": "`oncePerFrame`"
									},
									{
										"kind": "text",
										"text": " option.\n  The event typically would be published only once per frame anyways, however,\n  while the model is catching up when joining a session, this would be fired rapidly.\n\n  **"
									},
									{
										"kind": "code",
										"text": "`{ event: \"name\", handling: \"oncePerFrame\" }`"
									},
									{
										"kind": "text",
										"text": " is the most efficient option, you should use it whenever possible.**\n\n- **Immediate:** The handler will be invoked _synchronously_ during the [publish]"
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Model#publish",
										"target": 149,
										"tsLinkText": ""
									},
									{
										"kind": "text",
										"text": " call.\n  This will tie the view code very closely to the model simulation, which in general is undesirable.\n  However, if the view needs to know the exact state of the model at the time the event was published,\n  before execution in the model proceeds, then this is the facility to allow this without having to copy model state.\n\n  Pass "
									},
									{
										"kind": "code",
										"text": "`{event: \"name\", handling: \"immediate\"}`"
									},
									{
										"kind": "text",
										"text": " to enforce this behavior.\n\nThe "
									},
									{
										"kind": "code",
										"text": "`handler`"
									},
									{
										"kind": "text",
										"text": " can be any callback function.\nUnlike a model's [handler]"
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Model#subscribe",
										"target": 155,
										"tsLinkText": ""
									},
									{
										"kind": "text",
										"text": " which must be a method of that model,\na view's handler can be any function, including fat-arrow functions declared in-line.\nPassing a method like in the model is allowed too, it will be bound to "
									},
									{
										"kind": "code",
										"text": "`this`"
									},
									{
										"kind": "text",
										"text": " in the subscribe call.\n\nExample:\n"
									},
									{
										"kind": "code",
										"text": "```\nthis.subscribe(\"something\", \"changed\", this.update);\nthis.subscribe(this.id, {event: \"moved\", handling: \"oncePerFrame\"}, pos => this.sceneObject.setPosition(pos.x, pos.y, pos.z));\n```"
									}
								],
								"blockTags": [
									{
										"tag": "@tutorial",
										"content": [
											{
												"kind": "text",
												"text": "1_4_view_smoothing"
											}
										]
									},
									{
										"tag": "@returns",
										"content": []
									}
								]
							},
							"sources": [
								{
									"fileName": "multisynq-client/client/types.d.ts",
									"line": 770,
									"character": 8,
									"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L770"
								}
							],
							"typeParameter": [
								{
									"id": 247,
									"name": "T",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 248,
									"name": "scope",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "the event scope (to distinguish between events of the same name used by different objects)"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 249,
									"name": "eventSpec",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "the event name (user-defined or system-defined), or an event handling spec object"
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 250,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 251,
															"name": "event",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"comment": {
																"summary": [
																	{
																		"kind": "text",
																		"text": "the event name (user-defined or system-defined)"
																	}
																]
															},
															"sources": [
																{
																	"fileName": "multisynq-client/client/types.d.ts",
																	"line": 774,
																	"character": 20,
																	"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L774"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 252,
															"name": "handling",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"comment": {
																"summary": [
																	{
																		"kind": "code",
																		"text": "`\"queued\"`"
																	},
																	{
																		"kind": "text",
																		"text": " (default), "
																	},
																	{
																		"kind": "code",
																		"text": "`\"oncePerFrame\"`"
																	},
																	{
																		"kind": "text",
																		"text": ", or "
																	},
																	{
																		"kind": "code",
																		"text": "`\"immediate\"`"
																	}
																]
															},
															"sources": [
																{
																	"fileName": "multisynq-client/client/types.d.ts",
																	"line": 774,
																	"character": 35,
																	"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L774"
																}
															],
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "literal",
																		"value": "queued"
																	},
																	{
																		"type": "literal",
																		"value": "oncePerFrame"
																	},
																	{
																		"type": "literal",
																		"value": "immediate"
																	}
																]
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																251,
																252
															]
														}
													],
													"sources": [
														{
															"fileName": "multisynq-client/client/types.d.ts",
															"line": 774,
															"character": 18,
															"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L774"
														}
													]
												}
											}
										]
									}
								},
								{
									"id": 253,
									"name": "callback",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "the event handler (can be any function)"
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 254,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "multisynq-client/client/types.d.ts",
													"line": 775,
													"character": 22,
													"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L775"
												}
											],
											"signatures": [
												{
													"id": 255,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"sources": [
														{
															"fileName": "multisynq-client/client/types.d.ts",
															"line": 775,
															"character": 22,
															"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L775"
														}
													],
													"parameters": [
														{
															"id": 256,
															"name": "e",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"overwrites": {
								"type": "reference",
								"target": 89,
								"name": "PubSubParticipant.subscribe"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"target": 88,
						"name": "PubSubParticipant.subscribe"
					}
				},
				{
					"id": 257,
					"name": "unsubscribe",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "multisynq-client/client/types.d.ts",
							"line": 785,
							"character": 8,
							"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L785"
						}
					],
					"signatures": [
						{
							"id": 258,
							"name": "unsubscribe",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isPublic": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Unsubscribes this view's handler for the given event in the given scope."
									}
								]
							},
							"sources": [
								{
									"fileName": "multisynq-client/client/types.d.ts",
									"line": 785,
									"character": 8,
									"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L785"
								}
							],
							"typeParameter": [
								{
									"id": 259,
									"name": "T",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 260,
									"name": "scope",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "see [subscribe]"
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "View#subscribe",
												"target": 245,
												"tsLinkText": ""
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 261,
									"name": "event",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "see [subscribe]"
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "View#subscribe",
												"target": 245,
												"tsLinkText": ""
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 262,
									"name": "handler",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "the event handler (if not given, all handlers for the event are removed)"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 73,
										"typeArguments": [
											{
												"type": "reference",
												"target": 259,
												"name": "T",
												"package": "@multisynq/client",
												"refersToTypeParameter": true
											}
										],
										"name": "SubscriptionHandler",
										"package": "@multisynq/client",
										"qualifiedName": "\"@multisynq/client\".SubscriptionHandler"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"overwrites": {
								"type": "reference",
								"target": 99,
								"name": "PubSubParticipant.unsubscribe"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"target": 98,
						"name": "PubSubParticipant.unsubscribe"
					}
				},
				{
					"id": 263,
					"name": "unsubscribeAll",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "multisynq-client/client/types.d.ts",
							"line": 795,
							"character": 8,
							"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L795"
						}
					],
					"signatures": [
						{
							"id": 264,
							"name": "unsubscribeAll",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isPublic": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Unsubscribes all of this views's handlers for any event in any scope."
									}
								]
							},
							"sources": [
								{
									"fileName": "multisynq-client/client/types.d.ts",
									"line": 795,
									"character": 8,
									"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L795"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"overwrites": {
								"type": "reference",
								"target": 105,
								"name": "PubSubParticipant.unsubscribeAll"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"target": 104,
						"name": "PubSubParticipant.unsubscribeAll"
					}
				},
				{
					"id": 279,
					"name": "update",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "multisynq-client/client/types.d.ts",
							"line": 891,
							"character": 8,
							"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L891"
						}
					],
					"signatures": [
						{
							"id": 280,
							"name": "update",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Called on the root view from [main loop]"
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Session.join",
										"target": 355,
										"tsLinkText": ""
									},
									{
										"kind": "text",
										"text": " once per frame. Default implementation does nothing.\n\nOverride to add your own view-side input polling, rendering, etc.\n\nIf you want this to be called for other views than the root view,\nyou will have to call those methods from the root view's "
									},
									{
										"kind": "code",
										"text": "`update()`"
									},
									{
										"kind": "text",
										"text": ".\n\nThe time received is related to the local real-world time. If you need to access the model's time, use [this.now()]"
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "View#now",
										"target": 273,
										"tsLinkText": ""
									},
									{
										"kind": "text",
										"text": "."
									}
								]
							},
							"sources": [
								{
									"fileName": "multisynq-client/client/types.d.ts",
									"line": 891,
									"character": 8,
									"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L891"
								}
							],
							"parameters": [
								{
									"id": 281,
									"name": "time",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 282,
					"name": "wellKnownModel",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "multisynq-client/client/types.d.ts",
							"line": 903,
							"character": 8,
							"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L903"
						}
					],
					"signatures": [
						{
							"id": 283,
							"name": "wellKnownModel",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Access a model that was registered previously using beWellKnownAs().\n\nNote: The instance of your root Model class is automatically made well-known as "
									},
									{
										"kind": "code",
										"text": "`\"modelRoot\"`"
									},
									{
										"kind": "text",
										"text": "\nand passed to the [constructor]"
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "View#constructor",
										"target": {
											"sourceFileName": "docs/node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Object.constructor"
										},
										"tsLinkText": ""
									},
									{
										"kind": "text",
										"text": " of your root View during [Session.join]"
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Session.join",
										"target": 355,
										"tsLinkText": ""
									},
									{
										"kind": "text",
										"text": ".\n\nExample:\n"
									},
									{
										"kind": "code",
										"text": "```\nconst topModel = this.wellKnownModel(\"modelRoot\");\n```"
									}
								]
							},
							"sources": [
								{
									"fileName": "multisynq-client/client/types.d.ts",
									"line": 903,
									"character": 8,
									"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L903"
								}
							],
							"typeParameter": [
								{
									"id": 284,
									"name": "M",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 118,
										"name": "Model",
										"package": "@multisynq/client",
										"qualifiedName": "\"@multisynq/client\".Model"
									}
								}
							],
							"parameters": [
								{
									"id": 285,
									"name": "name",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 118,
								"name": "Model",
								"package": "@multisynq/client",
								"qualifiedName": "\"@multisynq/client\".Model"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						234
					]
				},
				{
					"title": "Properties",
					"children": [
						267,
						233
					]
				},
				{
					"title": "Accessors",
					"children": [
						265,
						286
					]
				},
				{
					"title": "Methods",
					"children": [
						237,
						275,
						277,
						268,
						273,
						239,
						271,
						245,
						257,
						263,
						279,
						282
					]
				}
			],
			"sources": [
				{
					"fileName": "multisynq-client/client/types.d.ts",
					"line": 645,
					"character": 17,
					"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L645"
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 78,
					"typeArguments": [
						{
							"type": "reference",
							"target": 229,
							"name": "ViewSubOptions",
							"package": "@multisynq/client",
							"qualifiedName": "\"@multisynq/client\".ViewSubOptions"
						}
					],
					"name": "PubSubParticipant",
					"package": "@multisynq/client",
					"qualifiedName": "\"@multisynq/client\".PubSubParticipant"
				}
			]
		},
		{
			"id": 2,
			"name": "Class",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 25,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"sources": [
						{
							"fileName": "multisynq-client/client/types.d.ts",
							"line": 5,
							"character": 21,
							"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L5"
						}
					],
					"signatures": [
						{
							"id": 26,
							"name": "new Class",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"sources": [
								{
									"fileName": "multisynq-client/client/types.d.ts",
									"line": 6,
									"character": 8,
									"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L6"
								}
							],
							"parameters": [
								{
									"id": 27,
									"name": "args",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 24,
								"name": "T",
								"package": "@multisynq/client",
								"qualifiedName": "\"@multisynq/client\".Class.T",
								"refersToTypeParameter": true
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Function.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Function.constructor"
					}
				},
				{
					"id": 22,
					"name": "arguments",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "docs/node_modules/typescript/lib/lib.es5.d.ts",
							"line": 305,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Function.arguments"
					}
				},
				{
					"id": 23,
					"name": "caller",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "docs/node_modules/typescript/lib/lib.es5.d.ts",
							"line": 306,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "docs/node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Function"
						},
						"name": "Function",
						"package": "typescript"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Function.caller"
					}
				},
				{
					"id": 21,
					"name": "length",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isReadonly": true
					},
					"sources": [
						{
							"fileName": "docs/node_modules/typescript/lib/lib.es5.d.ts",
							"line": 302,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Function.length"
					}
				},
				{
					"id": 20,
					"name": "prototype",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "docs/node_modules/typescript/lib/lib.es5.d.ts",
							"line": 301,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Function.prototype"
					}
				},
				{
					"id": 3,
					"name": "apply",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "docs/node_modules/typescript/lib/lib.es5.d.ts",
							"line": 281,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 4,
							"name": "apply",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Calls the function, substituting the specified object for the this value of the function, and the specified array for the arguments of the function."
									}
								]
							},
							"sources": [
								{
									"fileName": "docs/node_modules/typescript/lib/lib.es5.d.ts",
									"line": 281,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 5,
									"name": "this",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "docs/node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Function"
										},
										"name": "Function",
										"package": "typescript"
									}
								},
								{
									"id": 6,
									"name": "thisArg",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The object to be used as the this object."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 7,
									"name": "argArray",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A set of arguments to be passed to the function."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Function.apply"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Function.apply"
					}
				},
				{
					"id": 13,
					"name": "bind",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "docs/node_modules/typescript/lib/lib.es5.d.ts",
							"line": 296,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 14,
							"name": "bind",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "For a given function, creates a bound function that has the same body as the original function.\nThe this object of the bound function is associated with the specified object, and has the specified initial parameters."
									}
								]
							},
							"sources": [
								{
									"fileName": "docs/node_modules/typescript/lib/lib.es5.d.ts",
									"line": 296,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 15,
									"name": "this",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "docs/node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Function"
										},
										"name": "Function",
										"package": "typescript"
									}
								},
								{
									"id": 16,
									"name": "thisArg",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An object to which the this keyword can refer inside the new function."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 17,
									"name": "argArray",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isRest": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A list of arguments to be passed to the new function."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Function.bind"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Function.bind"
					}
				},
				{
					"id": 8,
					"name": "call",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "docs/node_modules/typescript/lib/lib.es5.d.ts",
							"line": 288,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 9,
							"name": "call",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Calls a method of an object, substituting another object for the current object."
									}
								]
							},
							"sources": [
								{
									"fileName": "docs/node_modules/typescript/lib/lib.es5.d.ts",
									"line": 288,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 10,
									"name": "this",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "docs/node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Function"
										},
										"name": "Function",
										"package": "typescript"
									}
								},
								{
									"id": 11,
									"name": "thisArg",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The object to be used as the current object."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 12,
									"name": "argArray",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isRest": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A list of arguments to be passed to the method."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Function.call"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Function.call"
					}
				},
				{
					"id": 18,
					"name": "toString",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "docs/node_modules/typescript/lib/lib.es5.d.ts",
							"line": 299,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 19,
							"name": "toString",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns a string representation of a function."
									}
								]
							},
							"sources": [
								{
									"fileName": "docs/node_modules/typescript/lib/lib.es5.d.ts",
									"line": 299,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Function.toString"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Function.toString"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						25
					]
				},
				{
					"title": "Properties",
					"children": [
						22,
						23,
						21,
						20
					]
				},
				{
					"title": "Methods",
					"children": [
						3,
						13,
						8,
						18
					]
				}
			],
			"sources": [
				{
					"fileName": "multisynq-client/client/types.d.ts",
					"line": 5,
					"character": 21,
					"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L5"
				}
			],
			"typeParameters": [
				{
					"id": 24,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": {
						"sourceFileName": "docs/node_modules/typescript/lib/lib.es5.d.ts",
						"qualifiedName": "Function"
					},
					"name": "Function",
					"package": "typescript"
				}
			]
		},
		{
			"id": 447,
			"name": "DataHandle",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 453,
					"name": "fetch",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "multisynq-client/client/types.d.ts",
							"line": 1058,
							"character": 8,
							"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L1058"
						}
					],
					"signatures": [
						{
							"id": 454,
							"name": "fetch",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "multisynq-client/client/types.d.ts",
									"line": 1058,
									"character": 8,
									"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L1058"
								}
							],
							"parameters": [
								{
									"id": 455,
									"name": "sessionid",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 456,
									"name": "handle",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 447,
										"name": "DataHandle",
										"package": "@multisynq/client",
										"qualifiedName": "\"@multisynq/client\".DataHandle"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "docs/node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "ArrayBuffer"
										},
										"name": "ArrayBuffer",
										"package": "typescript"
									}
								]
							}
						}
					]
				},
				{
					"id": 457,
					"name": "hash",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "multisynq-client/client/types.d.ts",
							"line": 1059,
							"character": 8,
							"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L1059"
						}
					],
					"signatures": [
						{
							"id": 458,
							"name": "hash",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "multisynq-client/client/types.d.ts",
									"line": 1059,
									"character": 8,
									"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L1059"
								}
							],
							"parameters": [
								{
									"id": 459,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								},
								{
									"id": 460,
									"name": "output",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 448,
					"name": "store",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "multisynq-client/client/types.d.ts",
							"line": 1053,
							"character": 8,
							"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L1053"
						}
					],
					"signatures": [
						{
							"id": 449,
							"name": "store",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "multisynq-client/client/types.d.ts",
									"line": 1053,
									"character": 8,
									"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L1053"
								}
							],
							"parameters": [
								{
									"id": 450,
									"name": "sessionId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 451,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "docs/node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "ArrayBuffer"
												},
												"name": "ArrayBuffer",
												"package": "typescript"
											}
										]
									}
								},
								{
									"id": 452,
									"name": "keep",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "docs/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 447,
										"name": "DataHandle",
										"package": "@multisynq/client",
										"qualifiedName": "\"@multisynq/client\".DataHandle"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"children": [
						453,
						457,
						448
					]
				}
			],
			"sources": [
				{
					"fileName": "multisynq-client/client/types.d.ts",
					"line": 1052,
					"character": 14,
					"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L1052"
				}
			]
		},
		{
			"id": 363,
			"name": "IApp",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 428,
					"name": "autoPassword",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "multisynq-client/client/types.d.ts",
							"line": 1032,
							"character": 8,
							"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L1032"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 429,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "multisynq-client/client/types.d.ts",
									"line": 1032,
									"character": 22,
									"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L1032"
								}
							],
							"signatures": [
								{
									"id": 430,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "multisynq-client/client/types.d.ts",
											"line": 1032,
											"character": 22,
											"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L1032"
										}
									],
									"parameters": [
										{
											"id": 431,
											"name": "options",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 432,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 434,
															"name": "default",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "multisynq-client/client/types.d.ts",
																	"line": 1034,
																	"character": 12,
																	"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L1034"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 435,
															"name": "force",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "multisynq-client/client/types.d.ts",
																	"line": 1035,
																	"character": 12,
																	"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L1035"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "boolean"
															}
														},
														{
															"id": 433,
															"name": "key",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "multisynq-client/client/types.d.ts",
																	"line": 1033,
																	"character": 12,
																	"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L1033"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 437,
															"name": "keyless",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "multisynq-client/client/types.d.ts",
																	"line": 1037,
																	"character": 12,
																	"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L1037"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "boolean"
															}
														},
														{
															"id": 436,
															"name": "scrub",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "multisynq-client/client/types.d.ts",
																	"line": 1036,
																	"character": 12,
																	"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L1036"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "boolean"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																434,
																435,
																433,
																437,
																436
															]
														}
													],
													"sources": [
														{
															"fileName": "multisynq-client/client/types.d.ts",
															"line": 1032,
															"character": 33,
															"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L1032"
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "docs/node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					}
				},
				{
					"id": 419,
					"name": "autoSession",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "multisynq-client/client/types.d.ts",
							"line": 1026,
							"character": 8,
							"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L1026"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 420,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "multisynq-client/client/types.d.ts",
									"line": 1026,
									"character": 21,
									"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L1026"
								}
							],
							"signatures": [
								{
									"id": 421,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "multisynq-client/client/types.d.ts",
											"line": 1026,
											"character": 21,
											"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L1026"
										}
									],
									"parameters": [
										{
											"id": 422,
											"name": "options",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 423,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 426,
															"name": "default",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "multisynq-client/client/types.d.ts",
																	"line": 1029,
																	"character": 12,
																	"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L1029"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 425,
															"name": "force",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "multisynq-client/client/types.d.ts",
																	"line": 1028,
																	"character": 12,
																	"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L1028"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "boolean"
															}
														},
														{
															"id": 424,
															"name": "key",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "multisynq-client/client/types.d.ts",
																	"line": 1027,
																	"character": 12,
																	"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L1027"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 427,
															"name": "keyless",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "multisynq-client/client/types.d.ts",
																	"line": 1030,
																	"character": 12,
																	"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L1030"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "boolean"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																426,
																425,
																424,
																427
															]
														}
													],
													"sources": [
														{
															"fileName": "multisynq-client/client/types.d.ts",
															"line": 1026,
															"character": 32,
															"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L1026"
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "docs/node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					}
				},
				{
					"id": 368,
					"name": "badge",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "multisynq-client/client/types.d.ts",
							"line": 990,
							"character": 8,
							"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L990"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 367,
					"name": "messages",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "multisynq-client/client/types.d.ts",
							"line": 989,
							"character": 8,
							"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L989"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 370,
					"name": "qrcode",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "multisynq-client/client/types.d.ts",
							"line": 992,
							"character": 8,
							"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L992"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 442,
					"name": "randomPassword",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "multisynq-client/client/types.d.ts",
							"line": 1040,
							"character": 8,
							"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L1040"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 443,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "multisynq-client/client/types.d.ts",
									"line": 1040,
									"character": 24,
									"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L1040"
								}
							],
							"signatures": [
								{
									"id": 444,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "multisynq-client/client/types.d.ts",
											"line": 1040,
											"character": 24,
											"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L1040"
										}
									],
									"parameters": [
										{
											"id": 445,
											"name": "len",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						}
					}
				},
				{
					"id": 438,
					"name": "randomSession",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "multisynq-client/client/types.d.ts",
							"line": 1039,
							"character": 8,
							"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L1039"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 439,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "multisynq-client/client/types.d.ts",
									"line": 1039,
									"character": 23,
									"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L1039"
								}
							],
							"signatures": [
								{
									"id": 440,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "multisynq-client/client/types.d.ts",
											"line": 1039,
											"character": 23,
											"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L1039"
										}
									],
									"parameters": [
										{
											"id": 441,
											"name": "len",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						}
					}
				},
				{
					"id": 365,
					"name": "root",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "multisynq-client/client/types.d.ts",
							"line": 987,
							"character": 8,
							"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L987"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "docs/node_modules/typescript/lib/lib.dom.d.ts",
							"qualifiedName": "HTMLElement"
						},
						"name": "HTMLElement",
						"package": "typescript"
					}
				},
				{
					"id": 364,
					"name": "sessionURL",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "multisynq-client/client/types.d.ts",
							"line": 986,
							"character": 8,
							"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L986"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 369,
					"name": "stats",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "multisynq-client/client/types.d.ts",
							"line": 991,
							"character": 8,
							"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L991"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 366,
					"name": "sync",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "multisynq-client/client/types.d.ts",
							"line": 988,
							"character": 8,
							"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L988"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 395,
					"name": "clearSessionMoniker",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "multisynq-client/client/types.d.ts",
							"line": 1011,
							"character": 8,
							"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L1011"
						}
					],
					"signatures": [
						{
							"id": 396,
							"name": "clearSessionMoniker",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "multisynq-client/client/types.d.ts",
									"line": 1011,
									"character": 8,
									"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L1011"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 414,
					"name": "isMultisynqHost",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "multisynq-client/client/types.d.ts",
							"line": 1024,
							"character": 8,
							"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L1024"
						}
					],
					"signatures": [
						{
							"id": 415,
							"name": "isMultisynqHost",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "multisynq-client/client/types.d.ts",
									"line": 1024,
									"character": 8,
									"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L1024"
								}
							],
							"parameters": [
								{
									"id": 416,
									"name": "hostname",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 385,
					"name": "makeQRCanvas",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "multisynq-client/client/types.d.ts",
							"line": 1003,
							"character": 8,
							"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L1003"
						}
					],
					"signatures": [
						{
							"id": 386,
							"name": "makeQRCanvas",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "multisynq-client/client/types.d.ts",
									"line": 1003,
									"character": 8,
									"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L1003"
								}
							],
							"parameters": [
								{
									"id": 387,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 388,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 392,
													"name": "colorDark",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "multisynq-client/client/types.d.ts",
															"line": 1007,
															"character": 12,
															"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L1007"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 393,
													"name": "colorLight",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "multisynq-client/client/types.d.ts",
															"line": 1008,
															"character": 12,
															"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L1008"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 394,
													"name": "correctLevel",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "multisynq-client/client/types.d.ts",
															"line": 1009,
															"character": 12,
															"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L1009"
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": "L"
															},
															{
																"type": "literal",
																"value": "M"
															},
															{
																"type": "literal",
																"value": "Q"
															},
															{
																"type": "literal",
																"value": "H"
															}
														]
													}
												},
												{
													"id": 391,
													"name": "height",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "multisynq-client/client/types.d.ts",
															"line": 1006,
															"character": 12,
															"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L1006"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 389,
													"name": "text",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "multisynq-client/client/types.d.ts",
															"line": 1004,
															"character": 12,
															"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L1004"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 390,
													"name": "width",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "multisynq-client/client/types.d.ts",
															"line": 1005,
															"character": 12,
															"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L1005"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														392,
														393,
														394,
														391,
														389,
														390
													]
												}
											],
											"sources": [
												{
													"fileName": "multisynq-client/client/types.d.ts",
													"line": 1003,
													"character": 31,
													"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L1003"
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "docs/node_modules/typescript/lib/lib.dom.d.ts",
									"qualifiedName": "HTMLCanvasElement"
								},
								"name": "HTMLCanvasElement",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 382,
					"name": "makeSessionWidgets",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "multisynq-client/client/types.d.ts",
							"line": 1002,
							"character": 8,
							"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L1002"
						}
					],
					"signatures": [
						{
							"id": 383,
							"name": "makeSessionWidgets",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "multisynq-client/client/types.d.ts",
									"line": 1002,
									"character": 8,
									"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L1002"
								}
							],
							"parameters": [
								{
									"id": 384,
									"name": "sessionId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 371,
					"name": "makeWidgetDock",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "multisynq-client/client/types.d.ts",
							"line": 993,
							"character": 8,
							"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L993"
						}
					],
					"signatures": [
						{
							"id": 372,
							"name": "makeWidgetDock",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "multisynq-client/client/types.d.ts",
									"line": 993,
									"character": 8,
									"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L993"
								}
							],
							"parameters": [
								{
									"id": 373,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 374,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 380,
													"name": "alwaysPinned",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "multisynq-client/client/types.d.ts",
															"line": 999,
															"character": 12,
															"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L999"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												},
												{
													"id": 377,
													"name": "badge",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "multisynq-client/client/types.d.ts",
															"line": 996,
															"character": 12,
															"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L996"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												},
												{
													"id": 375,
													"name": "debug",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "multisynq-client/client/types.d.ts",
															"line": 994,
															"character": 12,
															"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L994"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												},
												{
													"id": 381,
													"name": "fixedSize",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "multisynq-client/client/types.d.ts",
															"line": 1000,
															"character": 12,
															"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L1000"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												},
												{
													"id": 376,
													"name": "iframe",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "multisynq-client/client/types.d.ts",
															"line": 995,
															"character": 12,
															"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L995"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												},
												{
													"id": 378,
													"name": "qrcode",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "multisynq-client/client/types.d.ts",
															"line": 997,
															"character": 12,
															"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L997"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												},
												{
													"id": 379,
													"name": "stats",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "multisynq-client/client/types.d.ts",
															"line": 998,
															"character": 12,
															"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L998"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														380,
														377,
														375,
														381,
														376,
														378,
														379
													]
												}
											],
											"sources": [
												{
													"fileName": "multisynq-client/client/types.d.ts",
													"line": 993,
													"character": 33,
													"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L993"
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 400,
					"name": "messageFunction",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "multisynq-client/client/types.d.ts",
							"line": 1013,
							"character": 8,
							"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L1013"
						}
					],
					"signatures": [
						{
							"id": 401,
							"name": "messageFunction",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "multisynq-client/client/types.d.ts",
									"line": 1013,
									"character": 8,
									"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L1013"
								}
							],
							"parameters": [
								{
									"id": 402,
									"name": "msg",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 403,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 404,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 408,
													"name": "backgroundColor",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "multisynq-client/client/types.d.ts",
															"line": 1019,
															"character": 16,
															"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L1019"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 405,
													"name": "duration",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "multisynq-client/client/types.d.ts",
															"line": 1016,
															"character": 16,
															"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L1016"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 406,
													"name": "gravity",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "multisynq-client/client/types.d.ts",
															"line": 1017,
															"character": 16,
															"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L1017"
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": "bottom"
															},
															{
																"type": "literal",
																"value": "top"
															}
														]
													}
												},
												{
													"id": 407,
													"name": "position",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "multisynq-client/client/types.d.ts",
															"line": 1018,
															"character": 16,
															"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L1018"
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": "bottom"
															},
															{
																"type": "literal",
																"value": "right"
															},
															{
																"type": "literal",
																"value": "left"
															},
															{
																"type": "literal",
																"value": "center"
															}
														]
													}
												},
												{
													"id": 409,
													"name": "stopOnFocus",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "multisynq-client/client/types.d.ts",
															"line": 1020,
															"character": 16,
															"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L1020"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														408,
														405,
														406,
														407,
														409
													]
												}
											],
											"sources": [
												{
													"fileName": "multisynq-client/client/types.d.ts",
													"line": 1015,
													"character": 22,
													"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L1015"
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 417,
					"name": "referrerURL",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "multisynq-client/client/types.d.ts",
							"line": 1025,
							"character": 8,
							"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L1025"
						}
					],
					"signatures": [
						{
							"id": 418,
							"name": "referrerURL",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "multisynq-client/client/types.d.ts",
									"line": 1025,
									"character": 8,
									"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L1025"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 410,
					"name": "showMessage",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "multisynq-client/client/types.d.ts",
							"line": 1023,
							"character": 8,
							"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L1023"
						}
					],
					"signatures": [
						{
							"id": 411,
							"name": "showMessage",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "multisynq-client/client/types.d.ts",
									"line": 1023,
									"character": 8,
									"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L1023"
								}
							],
							"parameters": [
								{
									"id": 412,
									"name": "msg",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 413,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "docs/node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 397,
					"name": "showSyncWait",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "multisynq-client/client/types.d.ts",
							"line": 1012,
							"character": 8,
							"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L1012"
						}
					],
					"signatures": [
						{
							"id": 398,
							"name": "showSyncWait",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "multisynq-client/client/types.d.ts",
									"line": 1012,
									"character": 8,
									"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L1012"
								}
							],
							"parameters": [
								{
									"id": 399,
									"name": "bool",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						428,
						419,
						368,
						367,
						370,
						442,
						438,
						365,
						364,
						369,
						366
					]
				},
				{
					"title": "Methods",
					"children": [
						395,
						414,
						385,
						382,
						371,
						400,
						417,
						410,
						397
					]
				}
			],
			"sources": [
				{
					"fileName": "multisynq-client/client/types.d.ts",
					"line": 985,
					"character": 14,
					"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L985"
				}
			]
		},
		{
			"id": 1,
			"name": "ClassId",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "multisynq-client/client/types.d.ts",
					"line": 3,
					"character": 16,
					"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L3"
				}
			],
			"type": {
				"type": "intrinsic",
				"name": "string"
			}
		},
		{
			"id": 325,
			"name": "ClassOf",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "multisynq-client/client/types.d.ts",
					"line": 951,
					"character": 9,
					"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L951"
				}
			],
			"typeParameters": [
				{
					"id": 329,
					"name": "M",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 326,
					"name": "__type",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"sources": [
						{
							"fileName": "multisynq-client/client/types.d.ts",
							"line": 951,
							"character": 22,
							"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L951"
						}
					],
					"signatures": [
						{
							"id": 327,
							"name": "__type",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"parameters": [
								{
									"id": 328,
									"name": "args",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 329,
								"name": "M",
								"package": "@multisynq/client",
								"refersToTypeParameter": true
							}
						}
					]
				}
			}
		},
		{
			"id": 113,
			"name": "EventType",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "multisynq-client/client/types.d.ts",
					"line": 51,
					"character": 16,
					"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L51"
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 114,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 116,
							"name": "event",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "multisynq-client/client/types.d.ts",
									"line": 53,
									"character": 8,
									"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L53"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 115,
							"name": "scope",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "multisynq-client/client/types.d.ts",
									"line": 52,
									"character": 8,
									"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L52"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 117,
							"name": "source",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "multisynq-client/client/types.d.ts",
									"line": 54,
									"character": 8,
									"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L54"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "model"
									},
									{
										"type": "literal",
										"value": "view"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								116,
								115,
								117
							]
						}
					],
					"sources": [
						{
							"fileName": "multisynq-client/client/types.d.ts",
							"line": 51,
							"character": 28,
							"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L51"
						}
					]
				}
			}
		},
		{
			"id": 107,
			"name": "FutureHandler",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "multisynq-client/client/types.d.ts",
					"line": 47,
					"character": 16,
					"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L47"
				}
			],
			"typeParameters": [
				{
					"id": 111,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "any"
						}
					}
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reflection",
						"declaration": {
							"id": 108,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "multisynq-client/client/types.d.ts",
									"line": 47,
									"character": 50,
									"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L47"
								}
							],
							"signatures": [
								{
									"id": 109,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 110,
											"name": "args",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isRest": true
											},
											"type": {
												"type": "reference",
												"target": 111,
												"name": "T",
												"package": "@multisynq/client",
												"refersToTypeParameter": true
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					},
					{
						"type": "intrinsic",
						"name": "string"
					}
				]
			}
		},
		{
			"id": 51,
			"name": "InstAndStaticSerializer",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "multisynq-client/client/types.d.ts",
					"line": 20,
					"character": 16,
					"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L20"
				}
			],
			"typeParameters": [
				{
					"id": 69,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				},
				{
					"id": 70,
					"name": "IS",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				},
				{
					"id": 71,
					"name": "S",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 52,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 53,
							"name": "cls",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "multisynq-client/client/types.d.ts",
									"line": 21,
									"character": 8,
									"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L21"
								}
							],
							"type": {
								"type": "reference",
								"target": 2,
								"typeArguments": [
									{
										"type": "reference",
										"target": 69,
										"name": "T",
										"package": "@multisynq/client",
										"refersToTypeParameter": true
									}
								],
								"name": "Class",
								"package": "@multisynq/client",
								"qualifiedName": "\"@multisynq/client\".Class"
							}
						},
						{
							"id": 58,
							"name": "read",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "multisynq-client/client/types.d.ts",
									"line": 23,
									"character": 8,
									"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L23"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 59,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "multisynq-client/client/types.d.ts",
											"line": 23,
											"character": 14,
											"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L23"
										}
									],
									"signatures": [
										{
											"id": 60,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 61,
													"name": "state",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 70,
														"name": "IS",
														"package": "@multisynq/client",
														"refersToTypeParameter": true
													}
												}
											],
											"type": {
												"type": "reference",
												"target": 69,
												"name": "T",
												"package": "@multisynq/client",
												"refersToTypeParameter": true
											}
										}
									]
								}
							}
						},
						{
							"id": 65,
							"name": "readStatic",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "multisynq-client/client/types.d.ts",
									"line": 25,
									"character": 8,
									"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L25"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 66,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "multisynq-client/client/types.d.ts",
											"line": 25,
											"character": 20,
											"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L25"
										}
									],
									"signatures": [
										{
											"id": 67,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 68,
													"name": "state",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 71,
														"name": "S",
														"package": "@multisynq/client",
														"refersToTypeParameter": true
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 54,
							"name": "write",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "multisynq-client/client/types.d.ts",
									"line": 22,
									"character": 8,
									"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L22"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 55,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "multisynq-client/client/types.d.ts",
											"line": 22,
											"character": 15,
											"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L22"
										}
									],
									"signatures": [
										{
											"id": 56,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 57,
													"name": "value",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 69,
														"name": "T",
														"package": "@multisynq/client",
														"refersToTypeParameter": true
													}
												}
											],
											"type": {
												"type": "reference",
												"target": 70,
												"name": "IS",
												"package": "@multisynq/client",
												"refersToTypeParameter": true
											}
										}
									]
								}
							}
						},
						{
							"id": 62,
							"name": "writeStatic",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "multisynq-client/client/types.d.ts",
									"line": 24,
									"character": 8,
									"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L24"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 63,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "multisynq-client/client/types.d.ts",
											"line": 24,
											"character": 21,
											"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L24"
										}
									],
									"signatures": [
										{
											"id": 64,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 71,
												"name": "S",
												"package": "@multisynq/client",
												"refersToTypeParameter": true
											}
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								53,
								58,
								65,
								54,
								62
							]
						}
					],
					"sources": [
						{
							"fileName": "multisynq-client/client/types.d.ts",
							"line": 20,
							"character": 52,
							"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L20"
						}
					]
				}
			}
		},
		{
			"id": 28,
			"name": "InstanceSerializer",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "multisynq-client/client/types.d.ts",
					"line": 9,
					"character": 16,
					"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L9"
				}
			],
			"typeParameters": [
				{
					"id": 39,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				},
				{
					"id": 40,
					"name": "IS",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 29,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 30,
							"name": "cls",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "multisynq-client/client/types.d.ts",
									"line": 10,
									"character": 8,
									"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L10"
								}
							],
							"type": {
								"type": "reference",
								"target": 2,
								"typeArguments": [
									{
										"type": "reference",
										"target": 39,
										"name": "T",
										"package": "@multisynq/client",
										"refersToTypeParameter": true
									}
								],
								"name": "Class",
								"package": "@multisynq/client",
								"qualifiedName": "\"@multisynq/client\".Class"
							}
						},
						{
							"id": 35,
							"name": "read",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "multisynq-client/client/types.d.ts",
									"line": 12,
									"character": 8,
									"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L12"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 36,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "multisynq-client/client/types.d.ts",
											"line": 12,
											"character": 14,
											"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L12"
										}
									],
									"signatures": [
										{
											"id": 37,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 38,
													"name": "state",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 40,
														"name": "IS",
														"package": "@multisynq/client",
														"refersToTypeParameter": true
													}
												}
											],
											"type": {
												"type": "reference",
												"target": 39,
												"name": "T",
												"package": "@multisynq/client",
												"refersToTypeParameter": true
											}
										}
									]
								}
							}
						},
						{
							"id": 31,
							"name": "write",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "multisynq-client/client/types.d.ts",
									"line": 11,
									"character": 8,
									"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L11"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 32,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "multisynq-client/client/types.d.ts",
											"line": 11,
											"character": 15,
											"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L11"
										}
									],
									"signatures": [
										{
											"id": 33,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 34,
													"name": "value",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 39,
														"name": "T",
														"package": "@multisynq/client",
														"refersToTypeParameter": true
													}
												}
											],
											"type": {
												"type": "reference",
												"target": 40,
												"name": "IS",
												"package": "@multisynq/client",
												"refersToTypeParameter": true
											}
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								30,
								35,
								31
							]
						}
					],
					"sources": [
						{
							"fileName": "multisynq-client/client/types.d.ts",
							"line": 9,
							"character": 44,
							"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L9"
						}
					]
				}
			}
		},
		{
			"id": 462,
			"name": "Multisynq",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "multisynq-client/client/types.d.ts",
					"line": 1071,
					"character": 9,
					"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L1071"
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 463,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 469,
							"name": "App",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "multisynq-client/client/types.d.ts",
									"line": 1077,
									"character": 8,
									"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L1077"
								}
							],
							"type": {
								"type": "reference",
								"target": 363,
								"name": "IApp",
								"package": "@multisynq/client",
								"qualifiedName": "\"@multisynq/client\".IApp"
							}
						},
						{
							"id": 468,
							"name": "Constants",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "multisynq-client/client/types.d.ts",
									"line": 1076,
									"character": 8,
									"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L1076"
								}
							],
							"type": {
								"type": "query",
								"queryType": {
									"type": "reference",
									"target": 361,
									"name": "Constants",
									"package": "@multisynq/client",
									"qualifiedName": "\"@multisynq/client\".Constants"
								}
							}
						},
						{
							"id": 467,
							"name": "Data",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "multisynq-client/client/types.d.ts",
									"line": 1075,
									"character": 8,
									"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L1075"
								}
							],
							"type": {
								"type": "reference",
								"target": 447,
								"name": "DataHandle",
								"package": "@multisynq/client",
								"qualifiedName": "\"@multisynq/client\".DataHandle"
							}
						},
						{
							"id": 464,
							"name": "Model",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "multisynq-client/client/types.d.ts",
									"line": 1072,
									"character": 8,
									"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L1072"
								}
							],
							"type": {
								"type": "query",
								"queryType": {
									"type": "reference",
									"target": 118,
									"name": "Model",
									"package": "@multisynq/client",
									"qualifiedName": "\"@multisynq/client\".Model"
								}
							}
						},
						{
							"id": 466,
							"name": "Session",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "multisynq-client/client/types.d.ts",
									"line": 1074,
									"character": 8,
									"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L1074"
								}
							],
							"type": {
								"type": "query",
								"queryType": {
									"type": "reference",
									"target": 354,
									"name": "Session",
									"package": "@multisynq/client",
									"qualifiedName": "\"@multisynq/client\".Session"
								}
							}
						},
						{
							"id": 465,
							"name": "View",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "multisynq-client/client/types.d.ts",
									"line": 1073,
									"character": 8,
									"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L1073"
								}
							],
							"type": {
								"type": "query",
								"queryType": {
									"type": "reference",
									"target": 232,
									"name": "View",
									"package": "@multisynq/client",
									"qualifiedName": "\"@multisynq/client\".View"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								469,
								468,
								467,
								464,
								466,
								465
							]
						}
					],
					"sources": [
						{
							"fileName": "multisynq-client/client/types.d.ts",
							"line": 1071,
							"character": 21,
							"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L1071"
						}
					]
				}
			}
		},
		{
			"id": 324,
			"name": "MultisynqDebugOption",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "multisynq-client/client/types.d.ts",
					"line": 936,
					"character": 16,
					"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L936"
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "literal",
						"value": "session"
					},
					{
						"type": "literal",
						"value": "messages"
					},
					{
						"type": "literal",
						"value": "sends"
					},
					{
						"type": "literal",
						"value": "snapshot"
					},
					{
						"type": "literal",
						"value": "data"
					},
					{
						"type": "literal",
						"value": "hashing"
					},
					{
						"type": "literal",
						"value": "subscribe"
					},
					{
						"type": "literal",
						"value": "publish"
					},
					{
						"type": "literal",
						"value": "events"
					},
					{
						"type": "literal",
						"value": "classes"
					},
					{
						"type": "literal",
						"value": "ticks"
					},
					{
						"type": "literal",
						"value": "write"
					},
					{
						"type": "literal",
						"value": "offline"
					}
				]
			}
		},
		{
			"id": 322,
			"name": "MultisynqModelOptions",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "multisynq-client/client/types.d.ts",
					"line": 933,
					"character": 16,
					"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L933"
				}
			],
			"type": {
				"type": "intrinsic",
				"name": "object"
			}
		},
		{
			"id": 288,
			"name": "MultisynqSession",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "multisynq-client/client/types.d.ts",
					"line": 917,
					"character": 16,
					"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L917"
				}
			],
			"typeParameters": [
				{
					"id": 321,
					"name": "V",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 232,
						"name": "View",
						"package": "@multisynq/client",
						"qualifiedName": "\"@multisynq/client\".View"
					}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 289,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 299,
							"name": "data",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "multisynq-client/client/types.d.ts",
									"line": 922,
									"character": 8,
									"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L922"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 300,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 301,
											"name": "fetch",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "multisynq-client/client/types.d.ts",
													"line": 923,
													"character": 12,
													"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L923"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 302,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "multisynq-client/client/types.d.ts",
															"line": 923,
															"character": 19,
															"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L923"
														}
													],
													"signatures": [
														{
															"id": 303,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"parameters": [
																{
																	"id": 304,
																	"name": "handle",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"target": 447,
																		"name": "DataHandle",
																		"package": "@multisynq/client",
																		"qualifiedName": "\"@multisynq/client\".DataHandle"
																	}
																}
															],
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "docs/node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Promise"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "docs/node_modules/typescript/lib/lib.es5.d.ts",
																			"qualifiedName": "ArrayBuffer"
																		},
																		"name": "ArrayBuffer",
																		"package": "typescript"
																	}
																],
																"name": "Promise",
																"package": "typescript"
															}
														}
													]
												}
											}
										},
										{
											"id": 317,
											"name": "fromId",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "multisynq-client/client/types.d.ts",
													"line": 929,
													"character": 12,
													"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L929"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 318,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "multisynq-client/client/types.d.ts",
															"line": 929,
															"character": 20,
															"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L929"
														}
													],
													"signatures": [
														{
															"id": 319,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"parameters": [
																{
																	"id": 320,
																	"name": "id",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															],
															"type": {
																"type": "reference",
																"target": 447,
																"name": "DataHandle",
																"package": "@multisynq/client",
																"qualifiedName": "\"@multisynq/client\".DataHandle"
															}
														}
													]
												}
											}
										},
										{
											"id": 305,
											"name": "store",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "multisynq-client/client/types.d.ts",
													"line": 924,
													"character": 12,
													"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L924"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 306,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "multisynq-client/client/types.d.ts",
															"line": 924,
															"character": 19,
															"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L924"
														}
													],
													"signatures": [
														{
															"id": 307,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"parameters": [
																{
																	"id": 308,
																	"name": "data",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "docs/node_modules/typescript/lib/lib.es5.d.ts",
																			"qualifiedName": "ArrayBuffer"
																		},
																		"name": "ArrayBuffer",
																		"package": "typescript"
																	}
																},
																{
																	"id": 309,
																	"name": "options",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"type": {
																		"type": "reflection",
																		"declaration": {
																			"id": 310,
																			"name": "__type",
																			"variant": "declaration",
																			"kind": 65536,
																			"flags": {},
																			"children": [
																				{
																					"id": 312,
																					"name": "keep",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {
																						"isOptional": true
																					},
																					"sources": [
																						{
																							"fileName": "multisynq-client/client/types.d.ts",
																							"line": 926,
																							"character": 49,
																							"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L926"
																						}
																					],
																					"type": {
																						"type": "intrinsic",
																						"name": "boolean"
																					}
																				},
																				{
																					"id": 311,
																					"name": "shareable",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {
																						"isOptional": true
																					},
																					"sources": [
																						{
																							"fileName": "multisynq-client/client/types.d.ts",
																							"line": 926,
																							"character": 28,
																							"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L926"
																						}
																					],
																					"type": {
																						"type": "intrinsic",
																						"name": "boolean"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"children": [
																						312,
																						311
																					]
																				}
																			],
																			"sources": [
																				{
																					"fileName": "multisynq-client/client/types.d.ts",
																					"line": 926,
																					"character": 26,
																					"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L926"
																				}
																			]
																		}
																	}
																}
															],
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "docs/node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Promise"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": 447,
																		"name": "DataHandle",
																		"package": "@multisynq/client",
																		"qualifiedName": "\"@multisynq/client\".DataHandle"
																	}
																],
																"name": "Promise",
																"package": "typescript"
															}
														}
													]
												}
											}
										},
										{
											"id": 313,
											"name": "toId",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "multisynq-client/client/types.d.ts",
													"line": 928,
													"character": 12,
													"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L928"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 314,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "multisynq-client/client/types.d.ts",
															"line": 928,
															"character": 18,
															"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L928"
														}
													],
													"signatures": [
														{
															"id": 315,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"parameters": [
																{
																	"id": 316,
																	"name": "handle",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"target": 447,
																		"name": "DataHandle",
																		"package": "@multisynq/client",
																		"qualifiedName": "\"@multisynq/client\".DataHandle"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													]
												}
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												301,
												317,
												305,
												313
											]
										}
									],
									"sources": [
										{
											"fileName": "multisynq-client/client/types.d.ts",
											"line": 922,
											"character": 14,
											"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L922"
										}
									]
								}
							}
						},
						{
							"id": 290,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "multisynq-client/client/types.d.ts",
									"line": 918,
									"character": 8,
									"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L918"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 296,
							"name": "leave",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "multisynq-client/client/types.d.ts",
									"line": 921,
									"character": 8,
									"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L921"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 297,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "multisynq-client/client/types.d.ts",
											"line": 921,
											"character": 15,
											"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L921"
										}
									],
									"signatures": [
										{
											"id": 298,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "docs/node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Promise"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "void"
													}
												],
												"name": "Promise",
												"package": "typescript"
											}
										}
									]
								}
							}
						},
						{
							"id": 292,
							"name": "step",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "multisynq-client/client/types.d.ts",
									"line": 920,
									"character": 8,
									"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L920"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 293,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "multisynq-client/client/types.d.ts",
											"line": 920,
											"character": 14,
											"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L920"
										}
									],
									"signatures": [
										{
											"id": 294,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 295,
													"name": "time",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 291,
							"name": "view",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "multisynq-client/client/types.d.ts",
									"line": 919,
									"character": 8,
									"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L919"
								}
							],
							"type": {
								"type": "reference",
								"target": 321,
								"name": "V",
								"package": "@multisynq/client",
								"refersToTypeParameter": true
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								299,
								290,
								296,
								292,
								291
							]
						}
					],
					"sources": [
						{
							"fileName": "multisynq-client/client/types.d.ts",
							"line": 917,
							"character": 51,
							"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L917"
						}
					]
				}
			}
		},
		{
			"id": 330,
			"name": "MultisynqSessionParameters",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "multisynq-client/client/types.d.ts",
					"line": 953,
					"character": 16,
					"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L953"
				}
			],
			"typeParameters": [
				{
					"id": 351,
					"name": "M",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 118,
						"name": "Model",
						"package": "@multisynq/client",
						"qualifiedName": "\"@multisynq/client\".Model"
					}
				},
				{
					"id": 352,
					"name": "V",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 232,
						"name": "View",
						"package": "@multisynq/client",
						"qualifiedName": "\"@multisynq/client\".View"
					}
				},
				{
					"id": 353,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 331,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 332,
							"name": "apiKey",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "multisynq-client/client/types.d.ts",
									"line": 954,
									"character": 8,
									"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L954"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 333,
							"name": "appId",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "multisynq-client/client/types.d.ts",
									"line": 955,
									"character": 8,
									"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L955"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 344,
							"name": "autoSleep",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "multisynq-client/client/types.d.ts",
									"line": 966,
									"character": 8,
									"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L966"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "intrinsic",
										"name": "boolean"
									}
								]
							}
						},
						{
							"id": 349,
							"name": "box",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "multisynq-client/client/types.d.ts",
									"line": 971,
									"character": 8,
									"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L971"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 350,
							"name": "debug",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "multisynq-client/client/types.d.ts",
									"line": 972,
									"character": 8,
									"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L972"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": 324,
										"name": "MultisynqDebugOption",
										"package": "@multisynq/client",
										"qualifiedName": "\"@multisynq/client\".MultisynqDebugOption"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 324,
											"name": "MultisynqDebugOption",
											"package": "@multisynq/client",
											"qualifiedName": "\"@multisynq/client\".MultisynqDebugOption"
										}
									}
								]
							}
						},
						{
							"id": 346,
							"name": "eventRateLimit",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "multisynq-client/client/types.d.ts",
									"line": 968,
									"character": 8,
									"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L968"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 348,
							"name": "files",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "multisynq-client/client/types.d.ts",
									"line": 970,
									"character": 8,
									"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L970"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 341,
							"name": "location",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "multisynq-client/client/types.d.ts",
									"line": 963,
									"character": 8,
									"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L963"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 336,
							"name": "model",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "multisynq-client/client/types.d.ts",
									"line": 958,
									"character": 8,
									"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L958"
								}
							],
							"type": {
								"type": "reference",
								"target": 325,
								"typeArguments": [
									{
										"type": "reference",
										"target": 351,
										"name": "M",
										"package": "@multisynq/client",
										"refersToTypeParameter": true
									}
								],
								"name": "ClassOf",
								"package": "@multisynq/client",
								"qualifiedName": "\"@multisynq/client\".ClassOf"
							}
						},
						{
							"id": 334,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "multisynq-client/client/types.d.ts",
									"line": 956,
									"character": 8,
									"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L956"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "docs/node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 338,
							"name": "options",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "multisynq-client/client/types.d.ts",
									"line": 960,
									"character": 8,
									"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L960"
								}
							],
							"type": {
								"type": "reference",
								"target": 322,
								"name": "MultisynqModelOptions",
								"package": "@multisynq/client",
								"qualifiedName": "\"@multisynq/client\".MultisynqModelOptions"
							}
						},
						{
							"id": 335,
							"name": "password",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "multisynq-client/client/types.d.ts",
									"line": 957,
									"character": 8,
									"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L957"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "docs/node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 347,
							"name": "reflector",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "multisynq-client/client/types.d.ts",
									"line": 969,
									"character": 8,
									"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L969"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 345,
							"name": "rejoinLimit",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "multisynq-client/client/types.d.ts",
									"line": 967,
									"character": 8,
									"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L967"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 342,
							"name": "step",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "multisynq-client/client/types.d.ts",
									"line": 964,
									"character": 8,
									"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L964"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "auto"
									},
									{
										"type": "literal",
										"value": "manual"
									}
								]
							}
						},
						{
							"id": 343,
							"name": "tps",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "multisynq-client/client/types.d.ts",
									"line": 965,
									"character": 8,
									"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L965"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 337,
							"name": "view",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "multisynq-client/client/types.d.ts",
									"line": 959,
									"character": 8,
									"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L959"
								}
							],
							"type": {
								"type": "reference",
								"target": 325,
								"typeArguments": [
									{
										"type": "reference",
										"target": 352,
										"name": "V",
										"package": "@multisynq/client",
										"refersToTypeParameter": true
									}
								],
								"name": "ClassOf",
								"package": "@multisynq/client",
								"qualifiedName": "\"@multisynq/client\".ClassOf"
							}
						},
						{
							"id": 340,
							"name": "viewData",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "multisynq-client/client/types.d.ts",
									"line": 962,
									"character": 8,
									"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L962"
								}
							],
							"type": {
								"type": "reference",
								"target": 353,
								"name": "T",
								"package": "@multisynq/client",
								"refersToTypeParameter": true
							}
						},
						{
							"id": 339,
							"name": "viewOptions",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "multisynq-client/client/types.d.ts",
									"line": 961,
									"character": 8,
									"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L961"
								}
							],
							"type": {
								"type": "reference",
								"target": 323,
								"name": "MultisynqViewOptions",
								"package": "@multisynq/client",
								"qualifiedName": "\"@multisynq/client\".MultisynqViewOptions"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								332,
								333,
								344,
								349,
								350,
								346,
								348,
								341,
								336,
								334,
								338,
								335,
								347,
								345,
								342,
								343,
								337,
								340,
								339
							]
						}
					],
					"sources": [
						{
							"fileName": "multisynq-client/client/types.d.ts",
							"line": 953,
							"character": 81,
							"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L953"
						}
					]
				}
			}
		},
		{
			"id": 323,
			"name": "MultisynqViewOptions",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "multisynq-client/client/types.d.ts",
					"line": 934,
					"character": 16,
					"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L934"
				}
			],
			"type": {
				"type": "intrinsic",
				"name": "object"
			}
		},
		{
			"id": 112,
			"name": "QFuncEnv",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "multisynq-client/client/types.d.ts",
					"line": 49,
					"character": 16,
					"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L49"
				}
			],
			"type": {
				"type": "reference",
				"target": {
					"sourceFileName": "docs/node_modules/typescript/lib/lib.es5.d.ts",
					"qualifiedName": "Record"
				},
				"typeArguments": [
					{
						"type": "intrinsic",
						"name": "string"
					},
					{
						"type": "intrinsic",
						"name": "any"
					}
				],
				"name": "Record",
				"package": "typescript"
			}
		},
		{
			"id": 72,
			"name": "Serializer",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "multisynq-client/client/types.d.ts",
					"line": 28,
					"character": 16,
					"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L28"
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"target": 28,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "any"
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "InstanceSerializer",
						"package": "@multisynq/client",
						"qualifiedName": "\"@multisynq/client\".InstanceSerializer"
					},
					{
						"type": "reference",
						"target": 41,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "StaticSerializer",
						"package": "@multisynq/client",
						"qualifiedName": "\"@multisynq/client\".StaticSerializer"
					},
					{
						"type": "reference",
						"target": 51,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "any"
							},
							{
								"type": "intrinsic",
								"name": "any"
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "InstAndStaticSerializer",
						"package": "@multisynq/client",
						"qualifiedName": "\"@multisynq/client\".InstAndStaticSerializer"
					}
				]
			}
		},
		{
			"id": 41,
			"name": "StaticSerializer",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "multisynq-client/client/types.d.ts",
					"line": 15,
					"character": 16,
					"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L15"
				}
			],
			"typeParameters": [
				{
					"id": 50,
					"name": "S",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 42,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 46,
							"name": "readStatic",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "multisynq-client/client/types.d.ts",
									"line": 17,
									"character": 8,
									"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L17"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 47,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "multisynq-client/client/types.d.ts",
											"line": 17,
											"character": 20,
											"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L17"
										}
									],
									"signatures": [
										{
											"id": 48,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 49,
													"name": "state",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 50,
														"name": "S",
														"package": "@multisynq/client",
														"refersToTypeParameter": true
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 43,
							"name": "writeStatic",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "multisynq-client/client/types.d.ts",
									"line": 16,
									"character": 8,
									"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L16"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 44,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "multisynq-client/client/types.d.ts",
											"line": 16,
											"character": 21,
											"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L16"
										}
									],
									"signatures": [
										{
											"id": 45,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 50,
												"name": "S",
												"package": "@multisynq/client",
												"refersToTypeParameter": true
											}
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								46,
								43
							]
						}
					],
					"sources": [
						{
							"fileName": "multisynq-client/client/types.d.ts",
							"line": 15,
							"character": 38,
							"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L15"
						}
					]
				}
			}
		},
		{
			"id": 73,
			"name": "SubscriptionHandler",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "multisynq-client/client/types.d.ts",
					"line": 30,
					"character": 16,
					"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L30"
				}
			],
			"typeParameters": [
				{
					"id": 77,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reflection",
						"declaration": {
							"id": 74,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "multisynq-client/client/types.d.ts",
									"line": 30,
									"character": 42,
									"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L30"
								}
							],
							"signatures": [
								{
									"id": 75,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 76,
											"name": "e",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 77,
												"name": "T",
												"package": "@multisynq/client",
												"refersToTypeParameter": true
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					},
					{
						"type": "intrinsic",
						"name": "string"
					}
				]
			}
		},
		{
			"id": 223,
			"name": "ViewInfo",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "payload of view-join and view-exit if viewData was passed in Session.join"
					}
				]
			},
			"sources": [
				{
					"fileName": "multisynq-client/client/types.d.ts",
					"line": 635,
					"character": 16,
					"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L635"
				}
			],
			"typeParameters": [
				{
					"id": 228,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 224,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 227,
							"name": "location",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "multisynq-client/client/types.d.ts",
									"line": 638,
									"character": 8,
									"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L638"
								}
							],
							"type": {
								"type": "reference",
								"target": 214,
								"name": "ViewLocation",
								"package": "@multisynq/client",
								"qualifiedName": "\"@multisynq/client\".ViewLocation"
							}
						},
						{
							"id": 226,
							"name": "viewData",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "multisynq-client/client/types.d.ts",
									"line": 637,
									"character": 8,
									"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L637"
								}
							],
							"type": {
								"type": "reference",
								"target": 228,
								"name": "T",
								"package": "@multisynq/client",
								"refersToTypeParameter": true
							}
						},
						{
							"id": 225,
							"name": "viewId",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "multisynq-client/client/types.d.ts",
									"line": 636,
									"character": 8,
									"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L636"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								227,
								226,
								225
							]
						}
					],
					"sources": [
						{
							"fileName": "multisynq-client/client/types.d.ts",
							"line": 635,
							"character": 30,
							"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L635"
						}
					]
				}
			}
		},
		{
			"id": 214,
			"name": "ViewLocation",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "multisynq-client/client/types.d.ts",
					"line": 624,
					"character": 16,
					"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L624"
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 215,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 218,
							"name": "city",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "multisynq-client/client/types.d.ts",
									"line": 627,
									"character": 8,
									"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L627"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 219,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 221,
											"name": "lat",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "multisynq-client/client/types.d.ts",
													"line": 629,
													"character": 12,
													"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L629"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 222,
											"name": "lng",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "multisynq-client/client/types.d.ts",
													"line": 630,
													"character": 12,
													"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L630"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 220,
											"name": "name",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "multisynq-client/client/types.d.ts",
													"line": 628,
													"character": 12,
													"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L628"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												221,
												222,
												220
											]
										}
									],
									"sources": [
										{
											"fileName": "multisynq-client/client/types.d.ts",
											"line": 627,
											"character": 15,
											"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L627"
										}
									]
								}
							}
						},
						{
							"id": 216,
							"name": "country",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "multisynq-client/client/types.d.ts",
									"line": 625,
									"character": 8,
									"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L625"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 217,
							"name": "region",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "multisynq-client/client/types.d.ts",
									"line": 626,
									"character": 8,
									"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L626"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								218,
								216,
								217
							]
						}
					],
					"sources": [
						{
							"fileName": "multisynq-client/client/types.d.ts",
							"line": 624,
							"character": 31,
							"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L624"
						}
					]
				}
			}
		},
		{
			"id": 229,
			"name": "ViewSubOptions",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "multisynq-client/client/types.d.ts",
					"line": 641,
					"character": 16,
					"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L641"
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 230,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 231,
							"name": "handling",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "multisynq-client/client/types.d.ts",
									"line": 642,
									"character": 8,
									"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L642"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "queued"
									},
									{
										"type": "literal",
										"value": "oncePerFrame"
									},
									{
										"type": "literal",
										"value": "immediate"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								231
							]
						}
					],
					"sources": [
						{
							"fileName": "multisynq-client/client/types.d.ts",
							"line": 641,
							"character": 33,
							"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L641"
						}
					]
				}
			}
		},
		{
			"id": 446,
			"name": "App",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isPublic": true
			},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The App API is under construction."
					}
				]
			},
			"sources": [
				{
					"fileName": "multisynq-client/client/types.d.ts",
					"line": 1049,
					"character": 15,
					"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L1049"
				}
			],
			"type": {
				"type": "reference",
				"target": 363,
				"name": "IApp",
				"package": "@multisynq/client",
				"qualifiedName": "\"@multisynq/client\".IApp"
			}
		},
		{
			"id": 361,
			"name": "Constants",
			"variant": "declaration",
			"kind": 32,
			"flags": {},
			"sources": [
				{
					"fileName": "multisynq-client/client/types.d.ts",
					"line": 981,
					"character": 15,
					"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L981"
				}
			],
			"type": {
				"type": "reference",
				"target": {
					"sourceFileName": "docs/node_modules/typescript/lib/lib.es5.d.ts",
					"qualifiedName": "Record"
				},
				"typeArguments": [
					{
						"type": "intrinsic",
						"name": "string"
					},
					{
						"type": "intrinsic",
						"name": "any"
					}
				],
				"name": "Record",
				"package": "typescript"
			}
		},
		{
			"id": 461,
			"name": "Data",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isPublic": true
			},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The Data API is under construction."
					}
				]
			},
			"sources": [
				{
					"fileName": "multisynq-client/client/types.d.ts",
					"line": 1068,
					"character": 15,
					"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L1068"
				}
			],
			"type": {
				"type": "reference",
				"target": 447,
				"name": "DataHandle",
				"package": "@multisynq/client",
				"qualifiedName": "\"@multisynq/client\".DataHandle"
			}
		},
		{
			"id": 362,
			"name": "VERSION",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"sources": [
				{
					"fileName": "multisynq-client/client/types.d.ts",
					"line": 983,
					"character": 17,
					"url": "https://github.com/multisynq/multisynq-client/blob/f2b7b046426cd58c6390261b8ef2a3f548818d9e/client/types.d.ts#L983"
				}
			],
			"type": {
				"type": "intrinsic",
				"name": "string"
			}
		}
	],
	"groups": [
		{
			"title": "Namespaces",
			"children": [
				354
			]
		},
		{
			"title": "Classes",
			"children": [
				118,
				78,
				232
			]
		},
		{
			"title": "Interfaces",
			"children": [
				2,
				447,
				363
			]
		},
		{
			"title": "Type Aliases",
			"children": [
				1,
				325,
				113,
				107,
				51,
				28,
				462,
				324,
				322,
				288,
				330,
				323,
				112,
				72,
				41,
				73,
				223,
				214,
				229
			]
		},
		{
			"title": "Variables",
			"children": [
				446,
				361,
				461,
				362
			]
		}
	],
	"packageName": "@multisynq/client",
	"readme": [
		{
			"kind": "text",
			"text": "# Multisynq Client\n\n*Multisynq lets you build real-time multiuser apps without writing server-side code. Unlike traditional client/server architectures, the multiplayer code is executed on each client in a synchronized virtual machine, rather than on a server. Multisynq is available as a JavaScript library that synchronizes apps using Multisynq's global DePIN network.*\n\n* can be hosted as a **static website**\n* **no server-side** code needed\n* **no networking** code needed\n* independent of UI framework\n\n## Getting Started\n\nGet a free API key from [multisynq.io](https://multisynq.io/coder).\n\n    npm i @multisynq/client\n\nYou can also use the Multisynq pre-bundled files, e.g. via a script tag\n\n    <script src=\"https://cdn.jsdelivr.net/npm/@multisynq/client@1.0.4/bundled/multisynq-client.min.js\"></script>\n\nor via direct import as a module\n\n    import * as Multisynq from \"https://cdn.jsdelivr.net/npm/@multisynq/client@1.0.4/bundled/multisynq-client.esm.js\";\n\nStructure your app into a synchronized part (subclassed from "
		},
		{
			"kind": "code",
			"text": "`Multisynq.Model`"
		},
		{
			"kind": "text",
			"text": ") and a local part interacting with it (subclassed from "
		},
		{
			"kind": "code",
			"text": "`Multisynq.View`"
		},
		{
			"kind": "text",
			"text": "). Uses "
		},
		{
			"kind": "code",
			"text": "`Multisynq.Session.join()`"
		},
		{
			"kind": "text",
			"text": " with your API key to join a session.\n\nThat's it. No deployment of anything except your HTML+JS.\n\nFollow the documentation at [multisynq.io/docs](https://multisynq.io/docs) and the example apps in the [Multisynq GitHub repos](http://github.com/multisynq).\n\n## The Prime Directive\n\n*Your Multisynq Model must be completely self-contained.*\n\nThe model must only interact with the outside world via subscriptions to user input events that are published by a view. Everything else needs to be 100% deterministic. The model must not read any state from global variables, and the view must not modify model state directly (although it is allowed to read from it).\n\nBesides being deterministic, the model must be serializable – it needs to store state in an object-oriented style. That means in particular that the model cannot store functions, which JavaScript does not allow to be introspected for serialization. That also means you cannot use async code in the model. On the view side outside the model you're free to use any style of programming you want.\n\n## Servers and networking\n\nMultisynq runs on the [Multisynq DePIN network](https://multisynq.io) which automatically selects a server close to the first connecting user in a session.\n\nAll application code and data is only processed on the clients. All network communication and external data storage is end-to-end encrypted by the random session password – since the server does not process application data there is no need for it to be decrypted on the server. This makes Multisynq one of the most private real-time multiplayer solutions available.\n\n## Open source\n\nThe Multisynq Client is licensed under Apache 2.0.\n\n## Change Log\n\n### [1.0] - 2025-04-23\n\nPublic release"
		}
	],
	"symbolIdMap": {
		"0": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "\"@multisynq/client\""
		},
		"1": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "\"@multisynq/client\".ClassId"
		},
		"2": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "\"@multisynq/client\".Class"
		},
		"3": {
			"sourceFileName": "docs/node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "Function.apply"
		},
		"4": {
			"sourceFileName": "docs/node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "Function.apply"
		},
		"5": {
			"sourceFileName": "docs/node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "this"
		},
		"6": {
			"sourceFileName": "docs/node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "thisArg"
		},
		"7": {
			"sourceFileName": "docs/node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "argArray"
		},
		"8": {
			"sourceFileName": "docs/node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "Function.call"
		},
		"9": {
			"sourceFileName": "docs/node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "Function.call"
		},
		"10": {
			"sourceFileName": "docs/node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "this"
		},
		"11": {
			"sourceFileName": "docs/node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "thisArg"
		},
		"12": {
			"sourceFileName": "docs/node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "argArray"
		},
		"13": {
			"sourceFileName": "docs/node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "Function.bind"
		},
		"14": {
			"sourceFileName": "docs/node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "Function.bind"
		},
		"15": {
			"sourceFileName": "docs/node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "this"
		},
		"16": {
			"sourceFileName": "docs/node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "thisArg"
		},
		"17": {
			"sourceFileName": "docs/node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "argArray"
		},
		"18": {
			"sourceFileName": "docs/node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "Function.toString"
		},
		"19": {
			"sourceFileName": "docs/node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "Function.toString"
		},
		"20": {
			"sourceFileName": "docs/node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "Function.prototype"
		},
		"21": {
			"sourceFileName": "docs/node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "Function.length"
		},
		"22": {
			"sourceFileName": "docs/node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "Function.arguments"
		},
		"23": {
			"sourceFileName": "docs/node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "Function.caller"
		},
		"24": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "\"@multisynq/client\".Class.T"
		},
		"25": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "\"@multisynq/client\".Class"
		},
		"26": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "\"@multisynq/client\".Class"
		},
		"27": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "args"
		},
		"28": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "\"@multisynq/client\".InstanceSerializer"
		},
		"29": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "__type"
		},
		"30": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "__type.cls"
		},
		"31": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "__type.write"
		},
		"32": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "__type"
		},
		"33": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "__type"
		},
		"34": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "value"
		},
		"35": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "__type.read"
		},
		"36": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "__type"
		},
		"37": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "__type"
		},
		"38": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "state"
		},
		"39": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "T"
		},
		"40": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "IS"
		},
		"41": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "\"@multisynq/client\".StaticSerializer"
		},
		"42": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "__type"
		},
		"43": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "__type.writeStatic"
		},
		"44": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "__type"
		},
		"45": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "__type"
		},
		"46": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "__type.readStatic"
		},
		"47": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "__type"
		},
		"48": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "__type"
		},
		"49": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "state"
		},
		"50": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "S"
		},
		"51": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "\"@multisynq/client\".InstAndStaticSerializer"
		},
		"52": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "__type"
		},
		"53": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "__type.cls"
		},
		"54": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "__type.write"
		},
		"55": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "__type"
		},
		"56": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "__type"
		},
		"57": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "value"
		},
		"58": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "__type.read"
		},
		"59": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "__type"
		},
		"60": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "__type"
		},
		"61": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "state"
		},
		"62": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "__type.writeStatic"
		},
		"63": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "__type"
		},
		"64": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "__type"
		},
		"65": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "__type.readStatic"
		},
		"66": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "__type"
		},
		"67": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "__type"
		},
		"68": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "state"
		},
		"69": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "T"
		},
		"70": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "IS"
		},
		"71": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "S"
		},
		"72": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "\"@multisynq/client\".Serializer"
		},
		"73": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "\"@multisynq/client\".SubscriptionHandler"
		},
		"74": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "__type"
		},
		"75": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "__type"
		},
		"76": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "e"
		},
		"77": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "T"
		},
		"78": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "\"@multisynq/client\".PubSubParticipant"
		},
		"81": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "\"@multisynq/client\".PubSubParticipant.SubOptions"
		},
		"82": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "\"@multisynq/client\".PubSubParticipant.publish"
		},
		"83": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "\"@multisynq/client\".PubSubParticipant.publish"
		},
		"84": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "T"
		},
		"85": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "scope"
		},
		"86": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "event"
		},
		"87": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "data"
		},
		"88": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "\"@multisynq/client\".PubSubParticipant.subscribe"
		},
		"89": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "\"@multisynq/client\".PubSubParticipant.subscribe"
		},
		"90": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "T"
		},
		"91": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "scope"
		},
		"92": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "event"
		},
		"93": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "__type"
		},
		"94": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "__type.event"
		},
		"95": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "__type"
		},
		"96": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "__type.event"
		},
		"97": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "handler"
		},
		"98": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "\"@multisynq/client\".PubSubParticipant.unsubscribe"
		},
		"99": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "\"@multisynq/client\".PubSubParticipant.unsubscribe"
		},
		"100": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "T"
		},
		"101": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "scope"
		},
		"102": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "event"
		},
		"103": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "handler"
		},
		"104": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "\"@multisynq/client\".PubSubParticipant.unsubscribeAll"
		},
		"105": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "\"@multisynq/client\".PubSubParticipant.unsubscribeAll"
		},
		"106": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "\"@multisynq/client\".PubSubParticipant.SubOptions"
		},
		"107": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "\"@multisynq/client\".FutureHandler"
		},
		"108": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "__type"
		},
		"109": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "__type"
		},
		"110": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "args"
		},
		"111": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "T"
		},
		"112": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "\"@multisynq/client\".QFuncEnv"
		},
		"113": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "\"@multisynq/client\".EventType"
		},
		"114": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "__type"
		},
		"115": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "__type.scope"
		},
		"116": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "__type.event"
		},
		"117": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "__type.source"
		},
		"118": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "\"@multisynq/client\".Model"
		},
		"119": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "__type"
		},
		"120": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "\"@multisynq/client\".Model.create"
		},
		"121": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "\"@multisynq/client\".Model.create"
		},
		"122": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "T"
		},
		"123": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "this"
		},
		"124": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "options"
		},
		"125": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "\"@multisynq/client\".Model.register"
		},
		"126": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "\"@multisynq/client\".Model.register"
		},
		"127": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "classId"
		},
		"128": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "\"@multisynq/client\".Model.wellKnownModel"
		},
		"129": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "\"@multisynq/client\".Model.wellKnownModel"
		},
		"130": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "M"
		},
		"131": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "name"
		},
		"132": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "\"@multisynq/client\".Model.types"
		},
		"133": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "\"@multisynq/client\".Model.types"
		},
		"134": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "\"@multisynq/client\".Model.gatherClassTypes"
		},
		"135": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "\"@multisynq/client\".Model.gatherClassTypes"
		},
		"136": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "T"
		},
		"137": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "dummyObject"
		},
		"138": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "prefix"
		},
		"139": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "\"@multisynq/client\".Model.Multisynq"
		},
		"142": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "\"@multisynq/client\".Model.id"
		},
		"143": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "\"@multisynq/client\".Model.init"
		},
		"144": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "\"@multisynq/client\".Model.init"
		},
		"145": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "options"
		},
		"146": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "persistentData"
		},
		"147": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "\"@multisynq/client\".Model.destroy"
		},
		"148": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "\"@multisynq/client\".Model.destroy"
		},
		"149": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "\"@multisynq/client\".Model.publish"
		},
		"150": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "\"@multisynq/client\".Model.publish"
		},
		"151": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "T"
		},
		"152": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "scope"
		},
		"153": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "event"
		},
		"154": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "data"
		},
		"155": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "\"@multisynq/client\".Model.subscribe"
		},
		"156": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "\"@multisynq/client\".Model.subscribe"
		},
		"157": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "T"
		},
		"158": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "scope"
		},
		"159": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "event"
		},
		"160": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "handler"
		},
		"161": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "\"@multisynq/client\".Model.unsubscribe"
		},
		"162": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "\"@multisynq/client\".Model.unsubscribe"
		},
		"163": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "T"
		},
		"164": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "scope"
		},
		"165": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "event"
		},
		"166": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "handler"
		},
		"167": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "\"@multisynq/client\".Model.unsubscribeAll"
		},
		"168": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "\"@multisynq/client\".Model.unsubscribeAll"
		},
		"169": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "\"@multisynq/client\".Model.activeSubscription"
		},
		"170": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "\"@multisynq/client\".Model.activeSubscription"
		},
		"171": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "\"@multisynq/client\".Model.future"
		},
		"172": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "\"@multisynq/client\".Model.future"
		},
		"173": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "T"
		},
		"174": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "tOffset"
		},
		"175": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "method"
		},
		"176": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "args"
		},
		"177": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "\"@multisynq/client\".Model.cancelFuture"
		},
		"178": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "\"@multisynq/client\".Model.cancelFuture"
		},
		"179": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "T"
		},
		"180": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "method"
		},
		"181": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "\"@multisynq/client\".Model.random"
		},
		"182": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "\"@multisynq/client\".Model.random"
		},
		"183": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "\"@multisynq/client\".Model.now"
		},
		"184": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "\"@multisynq/client\".Model.now"
		},
		"185": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "\"@multisynq/client\".Model.beWellKnownAs"
		},
		"186": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "\"@multisynq/client\".Model.beWellKnownAs"
		},
		"187": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "name"
		},
		"188": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "\"@multisynq/client\".Model.wellKnownModel"
		},
		"189": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "\"@multisynq/client\".Model.wellKnownModel"
		},
		"190": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "M"
		},
		"191": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "name"
		},
		"192": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "\"@multisynq/client\".Model.getModel"
		},
		"193": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "\"@multisynq/client\".Model.getModel"
		},
		"194": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "M"
		},
		"195": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "id"
		},
		"196": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "\"@multisynq/client\".Model.modelOnly"
		},
		"197": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "\"@multisynq/client\".Model.modelOnly"
		},
		"198": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "errorMessage"
		},
		"199": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "\"@multisynq/client\".Model.createQFunc"
		},
		"200": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "\"@multisynq/client\".Model.createQFunc"
		},
		"201": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "T"
		},
		"202": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "env"
		},
		"203": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "func"
		},
		"204": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "\"@multisynq/client\".Model.createQFunc"
		},
		"205": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "T"
		},
		"206": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "func"
		},
		"207": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "\"@multisynq/client\".Model.persistSession"
		},
		"208": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "\"@multisynq/client\".Model.persistSession"
		},
		"209": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "func"
		},
		"210": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "__type"
		},
		"211": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "__type"
		},
		"212": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "\"@multisynq/client\".Model.sessionId"
		},
		"213": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "\"@multisynq/client\".Model.viewCount"
		},
		"214": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "\"@multisynq/client\".ViewLocation"
		},
		"215": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "__type"
		},
		"216": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "__type.country"
		},
		"217": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "__type.region"
		},
		"218": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "__type.city"
		},
		"219": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "__type"
		},
		"220": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "__type.name"
		},
		"221": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "__type.lat"
		},
		"222": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "__type.lng"
		},
		"223": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "\"@multisynq/client\".ViewInfo"
		},
		"224": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "__type"
		},
		"225": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "__type.viewId"
		},
		"226": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "__type.viewData"
		},
		"227": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "__type.location"
		},
		"228": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "T"
		},
		"229": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "\"@multisynq/client\".ViewSubOptions"
		},
		"230": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "__type"
		},
		"231": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "__type.handling"
		},
		"232": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "\"@multisynq/client\".View"
		},
		"233": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "\"@multisynq/client\".View.Multisynq"
		},
		"234": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "\"@multisynq/client\".View.__constructor"
		},
		"235": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "\"@multisynq/client\".View"
		},
		"236": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "model"
		},
		"237": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "\"@multisynq/client\".View.detach"
		},
		"238": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "\"@multisynq/client\".View.detach"
		},
		"239": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "\"@multisynq/client\".View.publish"
		},
		"240": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "\"@multisynq/client\".View.publish"
		},
		"241": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "T"
		},
		"242": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "scope"
		},
		"243": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "event"
		},
		"244": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "data"
		},
		"245": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "\"@multisynq/client\".View.subscribe"
		},
		"246": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "\"@multisynq/client\".View.subscribe"
		},
		"247": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "T"
		},
		"248": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "scope"
		},
		"249": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "eventSpec"
		},
		"250": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "__type"
		},
		"251": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "__type.event"
		},
		"252": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "__type.handling"
		},
		"253": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "callback"
		},
		"254": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "__type"
		},
		"255": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "__type"
		},
		"256": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "e"
		},
		"257": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "\"@multisynq/client\".View.unsubscribe"
		},
		"258": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "\"@multisynq/client\".View.unsubscribe"
		},
		"259": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "T"
		},
		"260": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "scope"
		},
		"261": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "event"
		},
		"262": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "handler"
		},
		"263": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "\"@multisynq/client\".View.unsubscribeAll"
		},
		"264": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "\"@multisynq/client\".View.unsubscribeAll"
		},
		"265": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "\"@multisynq/client\".View.activeSubscription"
		},
		"266": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "\"@multisynq/client\".View.activeSubscription"
		},
		"267": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "\"@multisynq/client\".View.viewId"
		},
		"268": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "\"@multisynq/client\".View.future"
		},
		"269": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "\"@multisynq/client\".View.future"
		},
		"270": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "tOffset"
		},
		"271": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "\"@multisynq/client\".View.random"
		},
		"272": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "\"@multisynq/client\".View.random"
		},
		"273": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "\"@multisynq/client\".View.now"
		},
		"274": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "\"@multisynq/client\".View.now"
		},
		"275": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "\"@multisynq/client\".View.externalNow"
		},
		"276": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "\"@multisynq/client\".View.externalNow"
		},
		"277": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "\"@multisynq/client\".View.extrapolatedNow"
		},
		"278": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "\"@multisynq/client\".View.extrapolatedNow"
		},
		"279": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "\"@multisynq/client\".View.update"
		},
		"280": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "\"@multisynq/client\".View.update"
		},
		"281": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "time"
		},
		"282": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "\"@multisynq/client\".View.wellKnownModel"
		},
		"283": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "\"@multisynq/client\".View.wellKnownModel"
		},
		"284": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "M"
		},
		"285": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "name"
		},
		"286": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "\"@multisynq/client\".View.session"
		},
		"287": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "\"@multisynq/client\".View.session"
		},
		"288": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "\"@multisynq/client\".MultisynqSession"
		},
		"289": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "__type"
		},
		"290": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "__type.id"
		},
		"291": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "__type.view"
		},
		"292": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "__type.step"
		},
		"293": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "__type"
		},
		"294": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "__type"
		},
		"295": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "time"
		},
		"296": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "__type.leave"
		},
		"297": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "__type"
		},
		"298": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "__type"
		},
		"299": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "__type.data"
		},
		"300": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "__type"
		},
		"301": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "__type.fetch"
		},
		"302": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "__type"
		},
		"303": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "__type"
		},
		"304": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "handle"
		},
		"305": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "__type.store"
		},
		"306": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "__type"
		},
		"307": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "__type"
		},
		"308": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "data"
		},
		"309": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "options"
		},
		"310": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "__type"
		},
		"311": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "__type.shareable"
		},
		"312": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "__type.keep"
		},
		"313": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "__type.toId"
		},
		"314": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "__type"
		},
		"315": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "__type"
		},
		"316": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "handle"
		},
		"317": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "__type.fromId"
		},
		"318": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "__type"
		},
		"319": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "__type"
		},
		"320": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "id"
		},
		"321": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "V"
		},
		"322": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "\"@multisynq/client\".MultisynqModelOptions"
		},
		"323": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "\"@multisynq/client\".MultisynqViewOptions"
		},
		"324": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "\"@multisynq/client\".MultisynqDebugOption"
		},
		"325": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "\"@multisynq/client\".ClassOf"
		},
		"326": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "__type"
		},
		"327": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "__type"
		},
		"328": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "args"
		},
		"329": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "M"
		},
		"330": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "\"@multisynq/client\".MultisynqSessionParameters"
		},
		"331": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "__type"
		},
		"332": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "__type.apiKey"
		},
		"333": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "__type.appId"
		},
		"334": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "__type.name"
		},
		"335": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "__type.password"
		},
		"336": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "__type.model"
		},
		"337": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "__type.view"
		},
		"338": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "__type.options"
		},
		"339": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "__type.viewOptions"
		},
		"340": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "__type.viewData"
		},
		"341": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "__type.location"
		},
		"342": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "__type.step"
		},
		"343": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "__type.tps"
		},
		"344": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "__type.autoSleep"
		},
		"345": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "__type.rejoinLimit"
		},
		"346": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "__type.eventRateLimit"
		},
		"347": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "__type.reflector"
		},
		"348": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "__type.files"
		},
		"349": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "__type.box"
		},
		"350": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "__type.debug"
		},
		"351": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "M"
		},
		"352": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "V"
		},
		"353": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "T"
		},
		"354": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "\"@multisynq/client\".Session"
		},
		"355": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "\"@multisynq/client\".Session.join"
		},
		"356": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "\"@multisynq/client\".Session.join"
		},
		"357": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "M"
		},
		"358": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "V"
		},
		"359": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "T"
		},
		"360": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "parameters"
		},
		"361": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "\"@multisynq/client\".Constants"
		},
		"362": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "\"@multisynq/client\".VERSION"
		},
		"363": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "\"@multisynq/client\".IApp"
		},
		"364": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "\"@multisynq/client\".IApp.sessionURL"
		},
		"365": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "\"@multisynq/client\".IApp.root"
		},
		"366": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "\"@multisynq/client\".IApp.sync"
		},
		"367": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "\"@multisynq/client\".IApp.messages"
		},
		"368": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "\"@multisynq/client\".IApp.badge"
		},
		"369": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "\"@multisynq/client\".IApp.stats"
		},
		"370": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "\"@multisynq/client\".IApp.qrcode"
		},
		"371": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "\"@multisynq/client\".IApp.makeWidgetDock"
		},
		"372": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "\"@multisynq/client\".IApp.makeWidgetDock"
		},
		"373": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "options"
		},
		"374": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "__type"
		},
		"375": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "__type.debug"
		},
		"376": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "__type.iframe"
		},
		"377": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "__type.badge"
		},
		"378": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "__type.qrcode"
		},
		"379": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "__type.stats"
		},
		"380": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "__type.alwaysPinned"
		},
		"381": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "__type.fixedSize"
		},
		"382": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "\"@multisynq/client\".IApp.makeSessionWidgets"
		},
		"383": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "\"@multisynq/client\".IApp.makeSessionWidgets"
		},
		"384": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "sessionId"
		},
		"385": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "\"@multisynq/client\".IApp.makeQRCanvas"
		},
		"386": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "\"@multisynq/client\".IApp.makeQRCanvas"
		},
		"387": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "options"
		},
		"388": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "__type"
		},
		"389": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "__type.text"
		},
		"390": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "__type.width"
		},
		"391": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "__type.height"
		},
		"392": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "__type.colorDark"
		},
		"393": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "__type.colorLight"
		},
		"394": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "__type.correctLevel"
		},
		"395": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "\"@multisynq/client\".IApp.clearSessionMoniker"
		},
		"396": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "\"@multisynq/client\".IApp.clearSessionMoniker"
		},
		"397": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "\"@multisynq/client\".IApp.showSyncWait"
		},
		"398": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "\"@multisynq/client\".IApp.showSyncWait"
		},
		"399": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "bool"
		},
		"400": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "\"@multisynq/client\".IApp.messageFunction"
		},
		"401": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "\"@multisynq/client\".IApp.messageFunction"
		},
		"402": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "msg"
		},
		"403": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "options"
		},
		"404": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "__type"
		},
		"405": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "__type.duration"
		},
		"406": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "__type.gravity"
		},
		"407": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "__type.position"
		},
		"408": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "__type.backgroundColor"
		},
		"409": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "__type.stopOnFocus"
		},
		"410": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "\"@multisynq/client\".IApp.showMessage"
		},
		"411": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "\"@multisynq/client\".IApp.showMessage"
		},
		"412": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "msg"
		},
		"413": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "options"
		},
		"414": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "\"@multisynq/client\".IApp.isMultisynqHost"
		},
		"415": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "\"@multisynq/client\".IApp.isMultisynqHost"
		},
		"416": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "hostname"
		},
		"417": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "\"@multisynq/client\".IApp.referrerURL"
		},
		"418": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "\"@multisynq/client\".IApp.referrerURL"
		},
		"419": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "\"@multisynq/client\".IApp.autoSession"
		},
		"420": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "__type"
		},
		"421": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "__type"
		},
		"422": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "options"
		},
		"423": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "__type"
		},
		"424": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "__type.key"
		},
		"425": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "__type.force"
		},
		"426": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "__type.default"
		},
		"427": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "__type.keyless"
		},
		"428": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "\"@multisynq/client\".IApp.autoPassword"
		},
		"429": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "__type"
		},
		"430": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "__type"
		},
		"431": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "options"
		},
		"432": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "__type"
		},
		"433": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "__type.key"
		},
		"434": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "__type.default"
		},
		"435": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "__type.force"
		},
		"436": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "__type.scrub"
		},
		"437": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "__type.keyless"
		},
		"438": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "\"@multisynq/client\".IApp.randomSession"
		},
		"439": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "__type"
		},
		"440": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "__type"
		},
		"441": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "len"
		},
		"442": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "\"@multisynq/client\".IApp.randomPassword"
		},
		"443": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "__type"
		},
		"444": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "__type"
		},
		"445": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "len"
		},
		"446": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "\"@multisynq/client\".App"
		},
		"447": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "\"@multisynq/client\".DataHandle"
		},
		"448": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "\"@multisynq/client\".DataHandle.store"
		},
		"449": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "\"@multisynq/client\".DataHandle.store"
		},
		"450": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "sessionId"
		},
		"451": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "data"
		},
		"452": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "keep"
		},
		"453": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "\"@multisynq/client\".DataHandle.fetch"
		},
		"454": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "\"@multisynq/client\".DataHandle.fetch"
		},
		"455": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "sessionid"
		},
		"456": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "handle"
		},
		"457": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "\"@multisynq/client\".DataHandle.hash"
		},
		"458": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "\"@multisynq/client\".DataHandle.hash"
		},
		"459": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "data"
		},
		"460": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "output"
		},
		"461": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "\"@multisynq/client\".Data"
		},
		"462": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "\"@multisynq/client\".Multisynq"
		},
		"463": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "__type"
		},
		"464": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "__type.Model"
		},
		"465": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "__type.View"
		},
		"466": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "__type.Session"
		},
		"467": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "__type.Data"
		},
		"468": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "__type.Constants"
		},
		"469": {
			"sourceFileName": "multisynq-client/client/types.d.ts",
			"qualifiedName": "__type.App"
		}
	}
}